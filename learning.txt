基本地图加载：
经纬度地图显示：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－经纬度直投地图</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv', {
                projection: 'EPSG:4326'
            });
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何显示经纬度直投地图。</p>
</body>
</html>
球面墨卡托投影地图显示：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－球面墨卡托投影地图</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何显示球面墨卡托投影地图。</p>
</body>
</html>
地图显示单图层：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－地图加载单图层</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 8;
        var lay;
        var onlyMapLay;
        function onLoad() {
            var imageURL = "http://t0.tianditu.gov.cn/img_w/wmts?" +
                "SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles" +
                "&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}&tk=您的密钥";
            //创建自定义图层对象
            lay = new T.TileLayer(imageURL, {minZoom: 1, maxZoom: 18});
            var config = {layers: [lay]};
            //初始化地图对象
            map = new T.Map("mapDiv", config);
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图
            map.enableScrollWheelZoom();
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何让地图显示单图层</p>
<div style="position:absolute;left:520px;">
</div>
</body>
</html>
地图显示两个图层：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－加载两个地图</title>
    <style type="text/css">
        body, html {width: 100%;height: 100%;overflow: hidden;margin:0;font-family:"微软雅黑";}
        #map1_container,#map2_container {width:100%;height:50%;float:left;overflow: hidden;margin:0;}
    </style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
		//注：同一页面创建多个地图时必须为同一投影
        var map,map2;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('map1_container');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            
            var imageURL = 'http://t0.tianditu.gov.cn/img_w/wmts?SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}&tk=您的密钥';
        	//创建自定义图层对象
        	var lay = new T.TileLayer(imageURL, {minZoom: 1, maxZoom: 18});
            map2 = new T.Map('map2_container', {layers: [lay]});
            map2.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="map1_container"></div>
<div id="map2_container"></div>
</body>
</html>
地图基本操作：
地图的放大和缩小：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－地图放大和缩小</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示初地图的放大和缩小。</p>
<div>
    <input type="button" id="button1" onClick="map.zoomIn()" value="放大地图"/>
    <input type="button" id="button2" onClick="map.zoomOut()" value="缩小地图"/>
</div>
</body>
</html>
地图平移：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－地图平移</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            setTimeout(function () {
                map.panTo(new T.LngLat(116.64899, 40.12948));   //两秒后移动到北京顺义
            }, 2000);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示地图平移操作。<p/>
</body>
</html>
移动地图：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－移动地图</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{width:100%;height:400px;}
        p{margin-left:5px; font-size:14px;}
    </style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            setTimeout(function(){
                map.panTo(new T.LngLat(116.64899,40.12948));   //两秒后移动到北京顺义
            }, 2000);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>初始化地图，中心点为（116.40769, 39.89945），缩放级别为8的北京市地图，2秒后，通过改变中心点坐标，移动到北京顺义</p>

</body>
</html>
缩放地图：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－缩放地图</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 400px;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            width: 100%;
            height: 400px;
        }

        p {
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <script>
        var map;
        var zoom = 8;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            setTimeout(function () {
                map.setZoom(14);
            }, 2000);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例展示地图缩放的功能</p>
<p>初始化展示中心点为（116.40769, 39.89945），缩放级别为8的北京市地图，2秒后，通过设置缩放级别将地图放大到14级</p>
</body>
</html>
拖拽地图：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－拖拽地图</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {width: 100%;height: 400px;margin:0;font-family:"微软雅黑";}
        #mapDiv{width:100%;height:100%;}
        p{margin-left:5px; font-size:14px;}
    </style>
    <script>
        var map;
        var zoom = 8;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            map.disableDrag();
            setTimeout(function () {
                alert("可以拖拽地图了");
                map.enableDrag();
            }, 2000);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本例演示地图可拖拽。</p>
</body>
</html>
获取地图范围：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－获取地图范围</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{width:100%;height: 400px;}
        p{margin-left:5px; font-size:14px;}
    </style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            var bs = map.getBounds();   //获取可视区域
            var bssw = bs.getSouthWest();   //可视区域左下角
            var bsne = bs.getNorthEast();   //可视区域右上角
            alert("当前地图可视范围是：" + bssw.lng + "," + bssw.lat + "到" + bsne.lng + "," + bsne.lat);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本例演示获取地图范围。</p>
</body>
</html>
地图参数设置：
设置地图中心点、缩放级别：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－设置地图中心点、缩放级别</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
        }

        function setCenterAndZoom() {
            var lng = document.getElementById("lng").value;
            var lat = document.getElementById("lat").value;
            var zoom = document.getElementById("zoom").value;
            map.centerAndZoom(new T.LngLat(lng, lat), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何设置地图中心点、缩放级别。</p>
<div >
	经度<input id="lng" type="text" value="116.64899"><br/>
	纬度<input id="lat" type="text" value="40.12948"><br/>
	缩放级别<input id="zoom" type="text" value="12"><br/>
	<input type="button" value="设置" onClick="setCenterAndZoom()"/>
</div>
</body>
</html>
设置是否允许鼠标双击放大地图：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－双击放大地图</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何允许双击放大地图。</p>
<div >
    <input type="button" id="button1" onClick="map.enableDoubleClickZoom()" value="允许双击地图放大"/>
    <input type="button" id="button2" onClick="map.disableDoubleClickZoom()" value="禁止双击地图放大"/>
</div>
</body>
</html>
设置是否允许鼠标滚轮缩放地图：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－鼠标滚轮操作地图</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<div >
    <p>本示例演示滚动鼠标滑轮，地图将进行缩放操作；</p>
    <input type="button" id="button2" onClick="map.enableScrollWheelZoom()" value="允许鼠标滚轮缩放地图"/>
    <input type="button" id="button1" onClick="map.disableScrollWheelZoom()" value="禁止鼠标滚轮缩放地图"/>
</div>
</body>
</html>
设置是否允许鼠标地图惯性拖拽：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－地图惯性拖拽操作</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例演示当鼠标拖拽完地图后，地图会自动的向鼠标拖拽的方向移动一段距离。</p>
    <input type="button" id="button1" onClick="map.enableInertia()" value="允许鼠标地图惯性拖拽"/>
    <input type="button" id="button2" onClick="map.disableInertia()" value="禁止鼠标地图惯性拖拽"/>
</div>
</body>
</html>
设置是否允许键盘操作地图：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－键盘操作地图</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例演示如何设置是否允许键盘操作地图。</p>
    <p>滚动鼠标滑轮，地图将进行缩放操作；</p>
    <p>小键盘上的四个方向键，地图将向相应的方向移动一段距离；</p>
    <p>敲击大小键盘上的+、-两个键，地图将放大或缩小</p>
    <input type="button" id="button1" onClick="map.enableKeyboard()" value="允许键盘操作地图"/>
    <input type="button" id="button2" onClick="map.disableKeyboard()" value="禁止键盘操作地图"/>
</div>
</body>
</html>
设置地图的显示级别：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－设置地图的显示级别</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图
            map.enableScrollWheelZoom();
        }

        function setZoomLevels(Levels) {
            map.setMinZoom(Levels[0]);
            map.setMaxZoom(Levels[1]);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>设置地图显示级别范围：</p>
    <input type="button" value="1-18级" onclick="setZoomLevels([1,18]);"/>
    <input type="button" value="4-10级" onclick="setZoomLevels([4,10]);"/>
</div>
</body>
</html>
置地图的显示范围：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－保存地图状态</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
        }
        
        function setBounds() {
            var bounds = document.getElementById("bounds").value.split(",");
            map.setMaxBounds(new T.LngLatBounds(new T.LngLat(bounds[0], bounds[1]), new T.LngLat(bounds[2], bounds[3])));
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何设置地图的显示范围，当前坐标范围为北京五环，设置完成后，地图的显示范围超过当前北京五环坐标时，地图会禁止拖动。</p>
<div >
    <p>显示范围：</p>
    <input type="text" id="bounds" value="116.27648,39.84042,116.4605,39.9721" size="30"/>
    <input type="button" id="button1" onclick="setBounds()" value="设置"/>
    <input type="button" id="button2" onclick=" map.setMaxBounds(null)" value="重置"/>
</div>
</body>
</html>
置地图样式：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－地图样式</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何设置地图样式。</p>
<div>
    <input type="button" onClick="map.setStyle('black')" value="block"/>
    <input type="button" onClick="map.setStyle('indigo')" value="indigo"/>
    <input type="button" onClick="map.removeStyle()" value="恢复默认"/>
</div>
</body>
</html>
地图信息获取：
获取地图中心点坐标：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－获取地图中心点坐标</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
        }

        function getMapCenter() {
            alert("当前地图中心点：" + map.getCenter().getLng() + "," + map.getCenter().getLat());
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<div >
    <p>本示例演示如何获取地图中心点坐标。</p>
    <input type="button" id="button" onClick="getMapCenter()" value="获取地图中心点坐标"/>
</div>
</body>
</html>
如何获取地图当前缩放级别：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－获取地图当前缩放级别</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
        }

        function getMapZoom() {
            alert("当前地图缩放级别：" + map.getZoom());
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何获取地图当前缩放级别。</p>
<input type="button" id="button" onClick="getMapZoom()" value="获取地图当前缩放级别"/>
</body>
</html>
获取地图当前可视范围坐标：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－获取地图当前可视范围坐标</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
    body, html {
        width: 100%;
        height: 100%;
        margin: 0;
        font-family: "Microsoft YaHei"
    }

    #mapDiv {
        width: 100%;
        height: 400px
    }

    input, b, p {
        margin-left: 5px;
        font-size: 14px
    }</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            getMapBounds();
        }

        function getMapBounds() {
            var bs = map.getBounds();   	//获取可视区域
            var bssw = bs.getSouthWest();   //可视区域左下角
            var bsne = bs.getNorthEast();   //可视区域右上角
            alert("当前地图可视范围是：" + bssw.getLng() + "," + bssw.getLat() + "到" + bsne.getLng() + "," + bsne.getLat());
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何获取地图当前可视范围坐标。</p>
</body>
</html>
自定义图层：
如何向地图上添加自定义图层：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－自定义图层</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图
            map.enableScrollWheelZoom();

            var imageURL = "http://t0.tianditu.gov.cn/img_w/wmts?" +
                "SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=img&STYLE=default&TILEMATRIXSET=w&FORMAT=tiles" +
                "&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}&tk=您的密钥";
            //创建自定义图层对象
            var lay = new T.TileLayer(imageURL, {minZoom: 1, maxZoom: 18});
            //将图层增加到地图上
            map.addLayer(lay);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何向地图上添加自定义图层。</p>
</body>
</html>
叠加其它WMS服务图层：
如何叠加其它WMS服务图层：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－叠加其它wms服务图层</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
    body, html {
        width: 100%;
        height: 100%;
        margin: 0;
        font-family: "Microsoft YaHei"
    }

    #mapDiv {
        width: 100%;
        height: 400px
    }

    input, b, p {
        margin-left: 15px;
        font-size: 14px
    }
    </style>
    <script type="text/javascript">
        var map;
        var zoom = 6;
        var wmsLayer;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            map.setMinZoom(6);
            map.setMaxZoom(10);
        }

        function getWMS(url, config) {
            if (wmsLayer) {
                map.removeLayer(wmsLayer);
            }
            wmsLayer = new T.TileLayer.WMS(url, config);
            map.addLayer(wmsLayer);
        }

        function addWmsLayer(layers, url) {
            var config = {
                version: "1.1.1",	//请求服务的版本
                layers: layers,
                transparent: true,	//输出图像背景是否透明
                styles: "",			//每个请求图层的用","分隔的描述样式
                format: "image/png"	//输出图像的类型
            };
            getWMS(url, config);
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何叠加其它WMS服务图层。</p>
<div style="position:absolute;">
    <p>叠加一个WMS图层，服务地址为：http://gisserver.tianditu.com/tiandituService/wms</p>
    <input type="button" value="叠加WMS服务图层" onClick="addWmsLayer('demo_city,demo_road,demo_anno','http://gisserver.tianditu.com/tiandituService/wms')"/>
    <input type="button" value="删除WMS服务图层" onClick="map.removeLayer(wmsLayer);"/>
</div>
</body>
</html>
基本控件加载：
添加缩放平移控件：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－添加缩放平移控件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, control;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //创建缩放平移控件对象
            control = new T.Control.Zoom();
            //添加缩放平移控件
            map.addControl(control);
        }

        function ControlsetPosition() {
            var selectNavPosition = document.getElementById("selectnavposition");
            var index = selectNavPosition.selectedIndex;
            var controlPositionStr = selectNavPosition.options[index].value;
            this.leftTOP = T_ANCHOR_TOP_LEFT;
            this.rightTOP = T_ANCHOR_TOP_RIGHT;
            this.leftBOTTOM = T_ANCHOR_BOTTOM_LEFT;
            this.rightBOTTOM = T_ANCHOR_BOTTOM_RIGHT
            var controlPosition;
            if (controlPositionStr == "leftTOP")
                controlPosition = T_ANCHOR_TOP_LEFT;
            else if (controlPositionStr == "rightTOP")
                controlPosition = T_ANCHOR_TOP_RIGHT;
            else if (controlPositionStr == "leftBOTTOM")
                controlPosition = T_ANCHOR_BOTTOM_LEFT;
            else if (controlPositionStr == "rightBOTTOM")
                controlPosition = T_ANCHOR_BOTTOM_RIGHT;
            control.setPosition(controlPosition);

        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例中，如何向地图上增加层级控制控件。</p>
    <input type="button" id="button" onClick="ControlsetPosition()" value="添加控件"/>
    <select id="selectnavposition">
        <option value="leftTOP">左上角</option>
        <option value="rightTOP">右上角</option>
        <option value="leftBOTTOM">左下角</option>
        <option value="rightBOTTOM">右下角</option>
    </select>
</div>
</body>
</html>
比例尺控件：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－比例尺控件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图
            map.enableScrollWheelZoom();
            //创建比例尺控件对象
            var scale = new T.Control.Scale();
            //添加比例尺控件
            map.addControl(scale);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例演示如何向地图上增加比例尺控件。</p>
</div>
</body>
</html>
鹰眼控件：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－鹰眼控件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            var miniMap = new T.Control.OverviewMap({
                isOpen: true,
                size: new T.Point(150, 150)
            });
            map.addControl(miniMap);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何向地图添加鹰眼控件。</p>
</body>
</html>
自定义版权控件:
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－自定义版权控件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //创建版权控件对象

            var copyControl = new T.Control.Copyright({position: T_ANCHOR_TOP_LEFT});
            map.addControl(copyControl);
            var bs = map.getBounds();   //返回地图可视区域
            copyControl.addCopyright({
                id: 1,
                content: "<a href='https://www.tianditu.gov.cn' target='_blank' style='font-size:14px;background:yellow'>自定义的版权控件</a>",
                bounds: bs
            });


        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何向地图添加自定义版权控件。</p>
</body>
</html>
自定义地图控件:
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－添加自定义地图控件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        var newControl;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图
            map.enableScrollWheelZoom();
            newControl = new T.Control({position: T_ANCHOR_TOP_LEFT});
            newControl.onAdd = function (map) {
                var container = document.createElement("div");
                var zicsstext = "font-size:12px;border:solid 2px blue;background:#fff;padding:2px;line-height:15px;cursor:pointer;";
                var zocsstext = "font-size:12px;border:solid 2px blue;background:#fff;padding:2px;line-height:15px;cursor:pointer;";
                this.zoomInButton = createButton("放大", "放大", 'a', container, zicsstext);
                this.zoomOutButton = createButton("缩小", "缩小", 'b', container, zocsstext);
                this.zoomInButton.onclick = zoomIn;
                this.zoomOutButton.onclick = zoomOut;
                return container;
            };

            newControl.onRemove = function (map) {
                //移除控件时要释放
                delete  this.zoomInButton;
                delete  this.zoomOutButton;
            }

            map.addControl(newControl);
        }

        function zoomIn() {
            map.zoomIn();
        }

        function zoomOut() {
            map.zoomOut();
        }

        function createButton(html, title, className, container, csstext) {
            var link = document.createElement("a");
            if (container) {
                container.appendChild(link);
            }
            link.innerHTML = html;
            link.title = title;
            link.style.cssText = csstext;
            return link;
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何向地图上添加自定义地图控件。</p>

</body>
</html>
标绘控件:
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－标绘控件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图
            map.enableScrollWheelZoom();
            var military = new T.Control.militarySymbols({ position: T_ANCHOR_TOP_LEFT});
            map.addControl(military);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p> 本示例演示如何向地图上增加标绘控件。 </p>
</body>
</html>
地图类型控件:
<!DOCTYPE html>
<html>
    <head>
    	<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
        <title>天地图－地图API－范例－地图类型控件</title>
        <style>
            body {
                margin: 0;
                padding: 0;
                width: 100%;
                height: 100%;
            }
            #map {
                position: absolute;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
            }
        </style>
        <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    </head>
    <body>
        <div id="map"></div>
        <script>
            //初始化地图对象
            map = new T.Map("map", {datasourcesControl: true});
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), 12);
            //创建对象
            var ctrl = new T.Control.MapType();
            //添加控件
            map.addControl(ctrl);
        </script>
    </body>
</html>
地图右键菜单：
简单右键菜单：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－简单右键菜单</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            var Menu = new T.ContextMenu({
                width: 50
            });

            var _MenuItem2 = new T.MenuItem("放大", zoomIn);
            Menu.addItem(_MenuItem2);
            var _MenuItem3 = new T.MenuItem("缩小", zoomOut);
            Menu.addItem(_MenuItem3);
            map.addContextMenu(Menu);
        }

        function zoomIn(e) {
            map.zoomIn();
        }

        function zoomOut(lnglat) {
            map.zoomOut();
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何向地图添加简单右键菜单。</p>
</body>
</html>
带分割线的右键菜单：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            var menu = new T.ContextMenu({
                width: 100
            });
            var txtMenuItem = [
                {
                    text: '放大',
                    callback: function () {
                        map.zoomIn()
                    }
                },
                {
                    text: '缩小',
                    callback: function () {
                        map.zoomOut()
                    }
                },
                {
                    text: '放置到最大级',
                    callback: function () {
                        map.setZoom(18)
                    }
                },
                {
                    text: '查看全国',
                    callback: function () {
                        map.setZoom(4)
                    }
                }
            ];

            for (var i = 0; i < txtMenuItem.length; i++) {
                //添加菜单项
                var menuItem = new T.MenuItem(txtMenuItem[i].text, txtMenuItem[i].callback);
                menu.addItem(menuItem);
                if (i == 1) {
                    //添加分割线
                    menu.addSeparator();
                }
            }
            //添加右键菜单
            map.addContextMenu(menu);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何向地图添加带分割线的右键菜单。</p>
</body>
</html>
获得右键菜单点击处的坐标：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－获得右键菜单点击处的坐标</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //创建右键菜单对象
            var menu = new T.ContextMenu({width: 140});
            //添加右键菜单

            var txtMenuItem = [
                {
                    text: '放大',
                    callback: function () {
                        map.zoomIn()
                    }
                },
                {
                    text: '缩小',
                    callback: function () {
                        map.zoomOut()
                    }
                },
                {
                    text: '放置到最大级',
                    callback: function () {
                        map.setZoom(18)
                    }
                },
                {
                    text: '查看全国',
                    callback: function () {
                        map.setZoom(4)
                    }
                },
                {
                    text: '获得右键点击处坐标',
                    isDisable: false,
                    callback: function (lnglat) {
                        alert(lnglat.getLng() + "," + lnglat.getLat());
                    }
                }
            ];
            
            for (var i = 0; i < txtMenuItem.length; i++) {

                //添加菜单项
                var item = new T.MenuItem(txtMenuItem[i].text, txtMenuItem[i].callback);
                //item.disable();
                menu.addItem(item);
                if (i == 1 || i == 3) {
                    //添加分割线
                    menu.addSeparator();
                }
            }
            map.addContextMenu(menu);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何获得右键菜单点击处的坐标。</p>
</body>
</html>
添加覆盖物：
添加标注：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－添加标注</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            //创建标注对象
            var marker = new T.Marker(new T.LngLat(116.411794, 39.9068));
            //向地图上添加标注
            map.addOverLay(marker);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何在地图上添加标注点。</p>
</body>
</html>
自定义标注图片：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－自定义标注图片</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            //创建图片对象
            var icon = new T.Icon({
                iconUrl: "http://api.tianditu.gov.cn/img/map/markerA.png",
                iconSize: new T.Point(19, 27),
                iconAnchor: new T.Point(10, 25)
            });
            //向地图上添加自定义标注
            var marker = new T.Marker(new T.LngLat(116.411794, 39.9068), {icon: icon});
            map.addOverLay(marker);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何自定义标注图片。</p>
</body>
</html>
文字标注：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－文字标注</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            var latlng = new T.LngLat(116.420837,39.902395);
            var label = new T.Label({
                text: "天地图：<a href='https://www.tianditu.gov.cn'  target='_blank'>https://www.tianditu.gov.cn </a>",
                position: latlng,
                offset: new T.Point(-9, 0)
            });
            //创建地图文本对象
            map.addOverLay(label);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何在地图上添加文字标注。</p>
</body>
</html>
添加线：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－画线</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, points;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            points = [];
            points.push(new T.LngLat(116.41136, 39.97569));
            points.push(new T.LngLat(116.411794, 39.9068));
            points.push(new T.LngLat(116.32969, 39.92940));
            points.push(new T.LngLat(116.385438, 39.90610));
            //创建线对象
            var line = new T.Polyline(points);
            //向地图上添加线
            map.addOverLay(line);
        }
        
        function getDistance(points) {
            var r = 0;
            for (var k = 0; k < points.length - 1; k++) {
                r += points[k].distanceTo(points[k + 1]);
            }

            return r;
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何在地图上添加线。</p>
<div>
    <input type="button" value="获取线的长度" onClick="alert(getDistance(points)+'米');"/>
</div>
</body>
</html>
添加面：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－画面</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            var points = [];
            points.push(new T.LngLat(116.41136, 39.97569));
            points.push(new T.LngLat(116.411794, 39.9068));
            points.push(new T.LngLat(116.32969, 39.92940));
            points.push(new T.LngLat(116.385438, 39.90610));
            //创建面对象
            var polygon = new T.Polygon(points,{
                color: "blue", weight: 3, opacity: 0.5, fillColor: "#FFFFFF", fillOpacity: 0.5
            });
            //向地图上添加面
            map.addOverLay(polygon);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何在地图上添加面。</p>
</body>
</html>
添加一个带洞多边形：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－画带洞多边形</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.38969, 39.90940), zoom);

            var points = [];
            points.push(new T.LngLat(116.315000,39.964750));
            points.push(new T.LngLat(116.303330,39.960810));
            points.push(new T.LngLat(116.306760,39.866270));
            points.push(new T.LngLat(116.328740,39.847560));
            points.push(new T.LngLat(116.366500,39.855730));
            points.push(new T.LngLat(116.442380,39.856520));
            points.push(new T.LngLat(116.455080,39.865480));
            points.push(new T.LngLat(116.456110,39.950020));
            points.push(new T.LngLat(116.428990,39.967390));

            var points1 = [];
            points1.push(new T.LngLat(116.349330,39.941590));
            points1.push(new T.LngLat(116.350620,39.900650));
            points1.push(new T.LngLat(116.353110,39.898670));
            points1.push(new T.LngLat(116.413880,39.899990));
            points1.push(new T.LngLat(116.418340,39.903150));
            points1.push(new T.LngLat(116.429330,39.903940));
            points1.push(new T.LngLat(116.427270,39.947910));
            points1.push(new T.LngLat(116.365810,39.946600));
            //创建面对象
            var polygon = new T.Polygon([points,points1],{
                color: "black", weight: 3, opacity: 0.2, fillColor: "blue", fillOpacity: 0.5
            });
            //向地图上添加面
            map.addOverLay(polygon);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>在地图上添加一个带洞多边形。</p>
</body>
</html>
添加一个矩形：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－画矩形</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, rect;
        function onLoad() {
            map = new T.Map("mapDiv");
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), 12);

            var bounds = new T.LngLatBounds(new T.LngLat(116.36231, 39.87784),new T.LngLat( 116.43954, 39.92841));
            var rect = new T.Rectangle(bounds );
            map.addOverLay(rect);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何在地图上添加一个矩形。</p>
</body>
</html>
添加圆：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－画圆</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.90313), zoom);
            // 定义该矩形的显示区域
            var circle = new T.Circle(new T.LngLat(116.40093, 39.90313), 5000,{color:"blue",weight:5,opacity:0.5,fillColor:"#FFFFFF",fillOpacity:0.5,lineStyle:"solid"});
            //向地图上添加圆
            map.addOverLay(circle);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何在地图上添加圆。</p>

</body>
</html>
显示一个信息浮窗：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－信息窗口</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            var lnglat = new T.LngLat(116.40969, 39.94940);
            //创建信息窗口对象
            var infoWin = new T.InfoWindow();
            infoWin.setLngLat(lnglat);
            //设置信息窗口要显示的内容
            infoWin.setContent("添加的信息窗口");
            //向地图上添加信息窗口
            map.addOverLay(infoWin);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何在地图上显示一个信息浮窗。</p>

</body>
</html>
用户自定义信息窗口：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－信息窗口</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        var center;
        var localsearch;
        var radius = 5000;
        var infoWin;
        function onLoad() {
        	center = new T.LngLat(116.63072 ,40.054952);
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(center, zoom);
            //创建信息窗口对象

            marker = new T.Marker(center);// 创建标注
            map.addOverLay(marker);
            var infoWin1 = new T.InfoWindow();
            var sContent =
                "<div style='margin:0px;'>" +
                "<div style='margin:10px 10px; '>" +
                "<img style='float:left;margin:0px 10px' src='http://lbs.tianditu.gov.cn/images/logo.png' width='101' height='49' title='天安门'/>" +
                "<div style='margin:10px 0px 10px 120px;'>电话 : (010)88187700 <br>地址：北京市顺义区机场东路国门商务区地理信息产业园2号楼天地图大厦" +
                "</div>" +
                "<input  id='keyWord' value='机场' type='text' style='border: 1px solid #cccccc;width: 180px;height: 20px;line-height: 20px;padding-left: 10px;display: block;float: left;'>" +
                "<input style='margin-left:195px;  width: 80px;height: 24px; text-align: center; background: #5596de;color: #FFF;border: none;display: block;cursor: pointer;' type='button' value='周边搜索'  onClick=\"localsearch.searchNearby(document.getElementById('keyWord').value,center,radius)\">" +
                "</div>" +
                "</div>";
            infoWin1.setContent(sContent);
            marker.addEventListener("click", function () {
                marker.openInfoWindow(infoWin1);
            });// 将标注添加到地图中
            var config = {
                pageCapacity:10,	//每页显示的数量
                onSearchComplete:localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map,config);
        }

        function localSearchResult(result)
        {
            //清空地图及搜索列表
            clearAll();
            //创建圆
            createCircle();
            //解析点数据结果
            pois(result.getPois());
        }

        //解析点数据结果
        function pois(obj)
        {
            if(obj)
            {
                //坐标数组，设置最佳比例尺时会用到
                var zoomArr = [];
                for(var i=0;i<obj.length;i++)
                {
                    //闭包
                    (function(i){
                        //名称
                        var name = obj[i].name;
                        //地址
                        var address = obj[i].address;
                        //坐标
                        var lnglatArr = obj[i].lonlat.split(" ");
                        var lnglat = new T.LngLat(lnglatArr[0],lnglatArr[1]);

                        var winHtml = "地址:"+address;

                        //创建标注对象
                        var marker = new T.Marker(lnglat);
                        //地图上添加标注点
                        map.addOverLay(marker);
                        //注册标注点的点击事件
                        marker.addEventListener("click", function () {
                            this.showPosition(marker, name, winHtml);

                        }, this)
                        zoomArr.push(lnglat);

                        //在页面上显示搜索的列表
                        var a = document.createElement("a");
                        a.href = "javascript://";
                        a.innerHTML = name;
                        a.onclick = function(){
                            showPosition(marker,name,winHtml);
                        }

                    })(i);
                }
            }
        }
        //圆形
        function createCircle()
        {
            var config = {
                color: "blue", //折线颜色
                fillColor: "#fff",    //填充颜色。当参数为空时，折线覆盖物将没有填充效果
                weight: "3", //折线的宽度，以像素为单位
                opacity: 0.5,    //折线的透明度，取值范围0 - 1
                fillOpacity: 0.4,
                lineStyle: "solid" //折线的样式，solid或dashed
            };
            //定义该矩形的显示区域
            var circle = new T.Circle(center,radius,config);
            map.addOverLay(circle);
        }
        //显示信息框
        function showPosition(marker, name, winHtml) {
            if (infoWin) {
                map.removeOverLay(infoWin);
                infoWin = null;
            }
            var html = "<h3>" + name + "</h3>";
            html += winHtml;
            infoWin = new T.InfoWindow(html);
            marker.openInfoWindow(infoWin);
        }

        //清空地图及搜索列表
        function clearAll()
        {
            map.clearOverLays();
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何在地图上显示一个信息浮窗。</p>
<div id="resultDiv"></div>
</body>
</html>
线的编辑功能：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－画线</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        var line = null;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            var points = [];
            points.push(new T.LngLat(116.41239, 39.97569));
            points.push(new T.LngLat(116.412799, 39.9068));
            points.push(new T.LngLat(116.32970, 39.92940));
            points.push(new T.LngLat(116.385440, 39.90610));
            //创建线对象
            line = new T.Polyline(points);
            //向地图上添加线
            map.addOverLay(line);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何启动和禁止线的编辑功能。</p>
<div >
    <input type="button" value="启动编辑" onclick="line.enableEdit();">
    <input type="button" value="禁止编辑" onclick="line.disableEdit();"/>
</div>
</body>
</html>
多边形编辑功能：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－画面</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        var polygon;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            var points = [];
            points.push(new T.LngLat(116.41136, 39.97569));
            points.push(new T.LngLat(116.411794, 39.9068));
            points.push(new T.LngLat(116.32969, 39.92940));
            points.push(new T.LngLat(116.385438, 39.90610));
            //创建面对象
            polygon = new T.Polygon(points, {
                color: "blue",
                weight: 3,
                opacity: 0.5,
                fillColor: "#FFFFFF",
                fillOpacity: 0.5
            });
            //向地图上添加面
            map.addOverLay(polygon);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
</div>
<div >
    <p>本示例演示如何启动和禁止多边形编辑功能。</p>
    <input type="button" value="启动编辑" onclick="polygon.enableEdit();">
    <input type="button" value="禁止编辑" onclick="polygon.disableEdit();"/>
</div>
</body>
</html>
添加/删除覆盖物：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－添加/删除覆盖物</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map,marker ,polyline,circle,polygon,rectangle;
        var zoom = 14;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.92113), zoom);

            var lnglat = new T.LngLat(116.404, 39.915);
            marker = new T.Marker(new T.LngLat(116.404, 39.915)); // 创建点
            polyline = new T.Polyline([
                new T.LngLat(116.399, 39.910),
                new T.LngLat(116.405, 39.920),
                new T.LngLat(116.425, 39.900)
            ], {color:"blue", weight:2, opacity:0.5});   //创建折线

            circle = new T.Circle(lnglat,500,{color:"blue", weight:2, opacity:0.5}); //创建圆

            polygon = new T.Polygon([
                new T.LngLat(116.387112,39.920977),
                new T.LngLat(116.385243,39.913063),
                new T.LngLat(116.394226,39.917988),
                new T.LngLat(116.401772,39.921364),
                new T.LngLat(116.41248,39.927893)
            ], {color:"blue", weight:2, opacity:0.5});  //创建多边形

            var pStart = new T.LngLat(116.392214,39.918985);
            var pEnd = new T.LngLat(116.41478,39.911901);
            rectangle = new T.Polygon([
                new T.LngLat(pStart.lng,pStart.lat),
                new T.LngLat(pEnd.lng,pStart.lat),
                new T.LngLat(pEnd.lng,pEnd.lat),
                new T.LngLat(pStart.lng,pEnd.lat)
            ], {color:"blue", weight:2, opacity:0.5});  //创建矩形
            add_overlay()
        }
        
        //添加覆盖物
        function add_overlay(){
            map.addOverLay(marker);            //增加点
            map.addOverLay(polyline);          //增加折线
            map.addOverLay(circle);            //增加圆
            map.addOverLay(polygon);           //增加多边形
            map.addOverLay(rectangle);         //增加矩形
        }
        
        //清除覆盖物
        function remove_overlay(){
            map.clearOverLays();
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本例演示添加多种覆蓋物 <p/>
    <input type="button" onclick="add_overlay();" value="添加覆盖物" />
    <input type="button" onclick="remove_overlay();" value="删除覆盖物" />
</div>
</body>
</html>
点拖拽：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－点拖拽</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map,marker;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.90313), zoom);

            var point = new T.LngLat(116.400244,39.92556);
            marker = new T.Marker(point);// 创建标注
            map.addOverLay(marker);             // 将标注添加到地图中
            marker.disableDragging();           // 不可拖拽
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示添加一个可拖拽的点 </p>
<div>
	<input type="button" onclick="marker.enableDragging();" value="可拖拽" />
	<input type="button" onclick="marker.disableDragging();" value="不可拖拽" />
</div>
</body>
</html>
设置覆盖物的显示与隐藏：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－设置覆盖物的显示与隐藏</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map,marker ,polyline,circle,polygon,rectangle;
        var zoom = 14;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.92113), zoom);

            var lnglat = new T.LngLat(116.404, 39.915);
            marker = new T.Marker(new T.LngLat(116.404, 39.915)); // 创建点
            polyline = new T.Polyline([
                new T.LngLat(116.399, 39.910),
                new T.LngLat(116.405, 39.920),
                new T.LngLat(116.425, 39.900)
            ], {color:"blue", weight:2, opacity:0.5});   //创建折线

            circle = new T.Circle(lnglat,500,{color:"blue", weight:2, opacity:0.5}); //创建圆

            polygon = new T.Polygon([
                new T.LngLat(116.387112,39.920977),
                new T.LngLat(116.385243,39.913063),
                new T.LngLat(116.394226,39.917988),
                new T.LngLat(116.401772,39.921364),
                new T.LngLat(116.41248,39.927893)
            ], {color:"blue", weight:2, opacity:0.5});  //创建多边形

            var pStart = new T.LngLat(116.392214,39.918985);
            var pEnd = new T.LngLat(116.41478,39.911901);
            rectangle = new T.Polygon([
                new T.LngLat(pStart.lng,pStart.lat),
                new T.LngLat(pEnd.lng,pStart.lat),
                new T.LngLat(pEnd.lng,pEnd.lat),
                new T.LngLat(pStart.lng,pEnd.lat)
            ], {color:"blue", weight:2, opacity:0.5});  //创建矩形
            add_overlay();

        }
        
        //添加覆盖物
        function add_overlay(){
            map.addOverLay(marker);            //增加点
            map.addOverLay(polyline);          //增加折线
            map.addOverLay(circle);            //增加圆
            map.addOverLay(polygon);           //增加多边形
            map.addOverLay(rectangle);         //增加矩形
        }
        
        function showOver(){
            marker.show(); polyline.show(); circle.show();
        }
        
        function hideOver(){
            marker.hide(); polyline.hide(); circle.hide();
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本例演示多种覆盖物的显示和隐藏</p>
    <input type="button" onclick="showOver()" value="显示" />
    <input type="button" onclick="hideOver()" value="隐藏" />
</div>
</body>
</html>
设置覆盖物的文字标签：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－设置覆盖物的文字标签</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            height: 400px;
            width: 100%;
        }

        input, p {
            margin-top: 10px;
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <script>
        var map, marker, label;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.90313), zoom);
            marker = new T.Marker(new T.LngLat(116.400244, 39.92556));// 创建标注

            map.addOverLay(marker);             // 将标注添加到地图中
            label = new T.Label({
                text: "<b>文字标注!!!<b>",
                position: marker.getLngLat(),
                offset: new T.Point(3, -30)
            });
            map.addOverLay(label);
            marker.addEventListener("drag", function (e) {
                label.setLngLat(marker.getLngLat());
            })
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本例演示设置覆盖物的文字标签</p>
    <input type="button" onclick="marker.enableDragging();" value="可拖拽"/>
    <input type="button" onclick="marker.disableDragging();" value="不可拖拽"/>
</div>
</body>
</html>
添加多个点的标注：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－添加多个点的标注</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            height: 400px;
            width: 100%;
        }

        input, p {
            margin-top: 10px;
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <script>
        var map
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.90313), zoom);

            // 随机向地图添加25个标注
            var bounds = map.getBounds();
            var sw = bounds.getSouthWest();
            var ne = bounds.getNorthEast();
            var lngSpan = Math.abs(sw.lng - ne.lng);
            var latSpan = Math.abs(ne.lat - sw.lat);
            for (var i = 0; i < 25; i++) {
                var point = new T.LngLat(sw.lng + lngSpan * (Math.random() * 0.7), ne.lat - latSpan * (Math.random() * 0.7));
                var marker = new T.Marker(point);// 创建标注
                map.addOverLay(marker);
            }
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示添加多个点的标注</p>
</body>
</html>

自定义覆盖物：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－自定义覆盖物</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            height: 400px;
            width: 100%;
        }

        input, p {
            margin-top: 10px;
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <script>
        var map, marker;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.90313), zoom);

            var definedOverlay = T.Overlay.extend({
                initialize: function (lnglat, text, text2, options) {
                    this.lnglat = lnglat;
                    this.setOptions(options);
                    this._text = text;
                    this._overText = text2;
                },

                onAdd: function (map) {
                    this.map = map;
                    var div = this._div = document.createElement("div");
                    div.style.position = "absolute";
                    div.style.backgroundColor = "#EE5D5B";
                    div.style.border = "1px solid #BC3B3A";
                    div.style.color = "white";
                    div.style.height = "18px";
                    div.style.padding = "2px";
                    div.style.lineHeight = "18px";
                    div.style.whiteSpace = "nowrap";
                    div.style.MozUserSelect = "none";
                    div.style.fontSize = "12px";
                    var span = this._span = document.createElement("span");
                    div.appendChild(span);
                    span.appendChild(document.createTextNode(this._text));
                    var that = this;

                    var arrow = this._arrow = document.createElement("div");
                    arrow.style.background = "url(http://map.baidu.com/fwmap/upload/r/map/fwmap/static/house/images/label.png) no-repeat";
                    arrow.style.position = "absolute";
                    arrow.style.width = "11px";
                    arrow.style.height = "10px";
                    arrow.style.top = "22px";
                    arrow.style.left = "10px";
                    arrow.style.overflow = "hidden";
                    div.appendChild(arrow);

                    div.onmouseover = function () {
                        this.style.backgroundColor = "#6BADCA";
                        this.style.borderColor = "#0000ff";
                        this.getElementsByTagName("span")[0].innerHTML = that._overText;
                        arrow.style.backgroundPosition = "0px -20px";
                    }

                    div.onmouseout = function () {
                        this.style.backgroundColor = "#EE5D5B";
                        this.style.borderColor = "#BC3B3A";
                        this.getElementsByTagName("span")[0].innerHTML = that._text;
                        arrow.style.backgroundPosition = "0px 0px";
                    }

                    map.getPanes().overlayPane.appendChild(this._div);
                    this.update(this.lnglat);
                },

                onRemove: function () {
                    var parent = this.div.parentNode;
                    if (parent) {
                        parent.removeChild(this.div);
                        this.map = null;
                        this.div = null;
                    }
                },

                setLnglat: function (lnglat) {
                    this.lnglat = lnglat;
                    this.update();
                },
                getLnglat: function () {
                    return this.lnglat;
                },
                setPos: function (pos) {
                    this.lnglat = this.map.layerPointToLngLat(pos);
                    this.update();
                },
                /**
                 * 更新位置
                 */
                update: function () {
                    var pos = this.map.lngLatToLayerPoint(this.lnglat);
                    this._div.style.top = ( pos.y - 36) + "px";
                    this._div.style.left = (pos.x - 11) + "px";

                }
            });
            
            var point = new T.LngLat(116.40438, 39.87877);
            var pdefinedOverlay = new definedOverlay(point, "天坛公园", "北京市东城区天坛东路甲1号", {});
            map.addOverLay(pdefinedOverlay);
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示自定义覆盖物</p>
</body>
</html>

热力图示例：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－热力图示例</title>
    <script src=" http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥" type="text/javascript"></script>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            height: 400px;
            width: 100%;
        }

        input, p {
            margin-top: 10px;
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <script type="text/javascript"
            src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/HeatmapOverlay.js"></script>
    <script>
        var data = [
            {name: '海门', value: 9},
            {name: '鄂尔多斯', value: 12},
            {name: '招远', value: 12},
            {name: '舟山', value: 12},
            {name: '齐齐哈尔', value: 14},
            {name: '盐城', value: 15},
            {name: '赤峰', value: 16},
            {name: '青岛', value: 18},
            {name: '乳山', value: 18},
            {name: '金昌', value: 19},
            {name: '泉州', value: 21},
            {name: '莱西', value: 21},
            {name: '日照', value: 21},
            {name: '胶南', value: 22},
            {name: '南通', value: 23},
            {name: '拉萨', value: 24},
            {name: '云浮', value: 24},
            {name: '梅州', value: 25},
            {name: '文登', value: 25},
            {name: '上海', value: 25},
            {name: '攀枝花', value: 25},
            {name: '威海', value: 25},
            {name: '承德', value: 25},
            {name: '厦门', value: 26},
            {name: '汕尾', value: 26},
            {name: '潮州', value: 26},
            {name: '丹东', value: 27},
            {name: '太仓', value: 27},
            {name: '曲靖', value: 27},
            {name: '烟台', value: 28},
            {name: '福州', value: 29},
            {name: '瓦房店', value: 30},
            {name: '即墨', value: 30},
            {name: '抚顺', value: 31},
            {name: '玉溪', value: 31},
            {name: '张家口', value: 31},
            {name: '阳泉', value: 31},
            {name: '莱州', value: 32},
            {name: '湖州', value: 32},
            {name: '汕头', value: 32},
            {name: '昆山', value: 33},
            {name: '宁波', value: 33},
            {name: '湛江', value: 33},
            {name: '揭阳', value: 34},
            {name: '荣成', value: 34},
            {name: '连云港', value: 35},
            {name: '葫芦岛', value: 35},
            {name: '常熟', value: 36},
            {name: '东莞', value: 36},
            {name: '河源', value: 36},
            {name: '淮安', value: 36},
            {name: '泰州', value: 36},
            {name: '南宁', value: 37},
            {name: '营口', value: 37},
            {name: '惠州', value: 37},
            {name: '江阴', value: 37},
            {name: '蓬莱', value: 37},
            {name: '韶关', value: 38},
            {name: '嘉峪关', value: 38},
            {name: '广州', value: 38},
            {name: '延安', value: 38},
            {name: '太原', value: 39},
            {name: '清远', value: 39},
            {name: '中山', value: 39},
            {name: '昆明', value: 39},
            {name: '寿光', value: 40},
            {name: '盘锦', value: 40},
            {name: '长治', value: 41},
            {name: '深圳', value: 41},
            {name: '珠海', value: 42},
            {name: '宿迁', value: 43},
            {name: '咸阳', value: 43},
            {name: '铜川', value: 44},
            {name: '平度', value: 44},
            {name: '佛山', value: 44},
            {name: '海口', value: 44},
            {name: '江门', value: 45},
            {name: '章丘', value: 45},
            {name: '肇庆', value: 46},
            {name: '大连', value: 47},
            {name: '临汾', value: 47},
            {name: '吴江', value: 47},
            {name: '石嘴山', value: 49},
            {name: '沈阳', value: 50},
            {name: '苏州', value: 50},
            {name: '茂名', value: 50},
            {name: '嘉兴', value: 51},
            {name: '长春', value: 51},
            {name: '胶州', value: 52},
            {name: '银川', value: 52},
            {name: '张家港', value: 52},
            {name: '三门峡', value: 53},
            {name: '锦州', value: 54},
            {name: '南昌', value: 54},
            {name: '柳州', value: 54},
            {name: '三亚', value: 54},
            {name: '自贡', value: 56},
            {name: '吉林', value: 56},
            {name: '阳江', value: 57},
            {name: '泸州', value: 57},
            {name: '西宁', value: 57},
            {name: '宜宾', value: 58},
            {name: '呼和浩特', value: 58},
            {name: '成都', value: 58},
            {name: '大同', value: 58},
            {name: '镇江', value: 59},
            {name: '桂林', value: 59},
            {name: '张家界', value: 59},
            {name: '宜兴', value: 59},
            {name: '北海', value: 60},
            {name: '西安', value: 61},
            {name: '金坛', value: 62},
            {name: '东营', value: 62},
            {name: '牡丹江', value: 63},
            {name: '遵义', value: 63},
            {name: '绍兴', value: 63},
            {name: '扬州', value: 64},
            {name: '常州', value: 64},
            {name: '潍坊', value: 65},
            {name: '重庆', value: 66},
            {name: '台州', value: 67},
            {name: '南京', value: 67},
            {name: '滨州', value: 70},
            {name: '贵阳', value: 71},
            {name: '无锡', value: 71},
            {name: '本溪', value: 71},
            {name: '克拉玛依', value: 72},
            {name: '渭南', value: 72},
            {name: '马鞍山', value: 72},
            {name: '宝鸡', value: 72},
            {name: '焦作', value: 75},
            {name: '句容', value: 75},
            {name: '北京', value: 79},
            {name: '徐州', value: 79},
            {name: '衡水', value: 80},
            {name: '包头', value: 80},
            {name: '绵阳', value: 80},
            {name: '枣庄', value: 84},
            {name: '杭州', value: 84},
            {name: '淄博', value: 85},
            {name: '鞍山', value: 86},
            {name: '溧阳', value: 86},
            {name: '库尔勒', value: 86},
            {name: '安阳', value: 90},
            {name: '开封', value: 90},
            {name: '济南', value: 92},
            {name: '德阳', value: 93},
            {name: '温州', value: 95},
            {name: '九江', value: 96},
            {name: '邯郸', value: 98},
            {name: '临安', value: 99},
            {name: '兰州', value: 99},
            {name: '沧州', value: 100},
            {name: '临沂', value: 103},
            {name: '南充', value: 104},
            {name: '天津', value: 105},
            {name: '富阳', value: 106},
            {name: '泰安', value: 112},
            {name: '诸暨', value: 112},
            {name: '郑州', value: 113},
            {name: '哈尔滨', value: 114},
            {name: '聊城', value: 116},
            {name: '芜湖', value: 117},
            {name: '唐山', value: 119},
            {name: '平顶山', value: 119},
            {name: '邢台', value: 119},
            {name: '德州', value: 120},
            {name: '济宁', value: 120},
            {name: '荆州', value: 127},
            {name: '宜昌', value: 130},
            {name: '义乌', value: 132},
            {name: '丽水', value: 133},
            {name: '洛阳', value: 134},
            {name: '秦皇岛', value: 136},
            {name: '株洲', value: 143},
            {name: '石家庄', value: 147},
            {name: '莱芜', value: 148},
            {name: '常德', value: 152},
            {name: '保定', value: 153},
            {name: '湘潭', value: 154},
            {name: '金华', value: 157},
            {name: '岳阳', value: 169},
            {name: '长沙', value: 175},
            {name: '衢州', value: 177},
            {name: '廊坊', value: 193},
            {name: '菏泽', value: 194},
            {name: '合肥', value: 229},
            {name: '武汉', value: 273},
            {name: '大庆', value: 279}
        ];
        
        var geoCoordMap = {
            '海门': [121.15, 31.89],
            '招远': [120.38, 37.35],
            '舟山': [122.207216, 29.985295],
            '盐城': [120.13, 33.38],
            '赤峰': [118.87, 42.28],
            '青岛': [120.33, 36.07],
            '乳山': [121.52, 36.89],
            '金昌': [102.188043, 38.520089],
            '泉州': [118.58, 24.93],
            '莱西': [120.53, 36.86],
            '日照': [119.46, 35.42],
            '胶南': [119.97, 35.88],
            '南通': [121.05, 32.08],
            '拉萨': [91.11, 29.97],
            '云浮': [112.02, 22.93],
            '梅州': [116.1, 24.55],
            '文登': [122.05, 37.2],
            '上海': [121.48, 31.22],
            '攀枝花': [101.718637, 26.582347],
            '威海': [122.1, 37.5],
            '承德': [117.93, 40.97],
            '厦门': [118.1, 24.46],
            '汕尾': [115.375279, 22.786211],
            '潮州': [116.63, 23.68],
            '丹东': [124.37, 40.13],
            '太仓': [121.1, 31.45],
            '曲靖': [103.79, 25.51],
            '烟台': [121.39, 37.52],
            '福州': [119.3, 26.08],
            '瓦房店': [121.979603, 39.627114],
            '即墨': [120.45, 36.38],
            '抚顺': [123.97, 41.97],
            '玉溪': [102.52, 24.35],
            '张家口': [114.87, 40.82],
            '阳泉': [113.57, 37.85],
            '莱州': [119.942327, 37.177017],
            '湖州': [120.1, 30.86],
            '汕头': [116.69, 23.39],
            '昆山': [120.95, 31.39],
            '宁波': [121.56, 29.86],
            '湛江': [110.359377, 21.270708],
            '揭阳': [116.35, 23.55],
            '荣成': [122.41, 37.16],
            '连云港': [119.16, 34.59],
            '葫芦岛': [120.836932, 40.711052],
            '常熟': [120.74, 31.64],
            '东莞': [113.75, 23.04],
            '河源': [114.68, 23.73],
            '淮安': [119.15, 33.5],
            '泰州': [119.9, 32.49],
            '南宁': [108.33, 22.84],
            '营口': [122.18, 40.65],
            '惠州': [114.4, 23.09],
            '江阴': [120.26, 31.91],
            '蓬莱': [120.75, 37.8],
            '韶关': [113.62, 24.84],
            '嘉峪关': [98.289152, 39.77313],
            '广州': [113.23, 23.16],
            '延安': [109.47, 36.6],
            '太原': [112.53, 37.87],
            '清远': [113.01, 23.7],
            '中山': [113.38, 22.52],
            '昆明': [102.73, 25.04],
            '寿光': [118.73, 36.86],
            '盘锦': [122.070714, 41.119997],
            '长治': [113.08, 36.18],
            '深圳': [114.07, 22.62],
            '珠海': [113.52, 22.3],
            '宿迁': [118.3, 33.96],
            '咸阳': [108.72, 34.36],
            '铜川': [109.11, 35.09],
            '平度': [119.97, 36.77],
            '佛山': [113.11, 23.05],
            '海口': [110.35, 20.02],
            '江门': [113.06, 22.61],
            '章丘': [117.53, 36.72],
            '肇庆': [112.44, 23.05],
            '大连': [121.62, 38.92],
            '临汾': [111.5, 36.08],
            '吴江': [120.63, 31.16],
            '石嘴山': [106.39, 39.04],
            '沈阳': [123.38, 41.8],
            '苏州': [120.62, 31.32],
            '茂名': [110.88, 21.68],
            '嘉兴': [120.76, 30.77],
            '长春': [125.35, 43.88],
            '胶州': [120.03336, 36.264622],
            '银川': [106.27, 38.47],
            '张家港': [120.555821, 31.875428],
            '三门峡': [111.19, 34.76],
            '锦州': [121.15, 41.13],
            '南昌': [115.89, 28.68],
            '柳州': [109.4, 24.33],
            '三亚': [109.511909, 18.252847],
            '自贡': [104.778442, 29.33903],
            '吉林': [126.57, 43.87],
            '阳江': [111.95, 21.85],
            '泸州': [105.39, 28.91],
            '西宁': [101.74, 36.56],
            '宜宾': [104.56, 29.77],
            '成都': [104.06, 30.67],
            '大同': [113.3, 40.12],
            '镇江': [119.44, 32.2],
            '桂林': [110.28, 25.29],
            '张家界': [110.479191, 29.117096],
            '宜兴': [119.82, 31.36],
            '北海': [109.12, 21.49],
            '西安': [108.95, 34.27],
            '金坛': [119.56, 31.74],
            '东营': [118.49, 37.46],
            '牡丹江': [129.58, 44.6],
            '遵义': [106.9, 27.7],
            '绍兴': [120.58, 30.01],
            '扬州': [119.42, 32.39],
            '常州': [119.95, 31.79],
            '潍坊': [119.1, 36.62],
            '重庆': [106.54, 29.59],
            '台州': [121.420757, 28.656386],
            '南京': [118.78, 32.04],
            '滨州': [118.03, 37.36],
            '贵阳': [106.71, 26.57],
            '无锡': [120.29, 31.59],
            '本溪': [123.73, 41.3],
            '渭南': [109.5, 34.52],
            '马鞍山': [118.48, 31.56],
            '宝鸡': [107.15, 34.38],
            '焦作': [113.21, 35.24],
            '句容': [119.16, 31.95],
            '北京': [116.46, 39.92],
            '徐州': [117.2, 34.26],
            '衡水': [115.72, 37.72],
            '包头': [110, 40.58],
            '绵阳': [104.73, 31.48],
            '枣庄': [117.57, 34.86],
            '杭州': [120.19, 30.26],
            '淄博': [118.05, 36.78],
            '鞍山': [122.85, 41.12],
            '溧阳': [119.48, 31.43],
            '库尔勒': [86.06, 41.68],
            '安阳': [114.35, 36.1],
            '开封': [114.35, 34.79],
            '济南': [117, 36.65],
            '德阳': [104.37, 31.13],
            '温州': [120.65, 28.01],
            '九江': [115.97, 29.71],
            '邯郸': [114.47, 36.6],
            '临安': [119.72, 30.23],
            '兰州': [103.73, 36.03],
            '沧州': [116.83, 38.33],
            '临沂': [118.35, 35.05],
            '南充': [106.110698, 30.837793],
            '天津': [117.2, 39.13],
            '富阳': [119.95, 30.07],
            '泰安': [117.13, 36.18],
            '诸暨': [120.23, 29.71],
            '郑州': [113.65, 34.76],
            '哈尔滨': [126.63, 45.75],
            '聊城': [115.97, 36.45],
            '芜湖': [118.38, 31.33],
            '唐山': [118.02, 39.63],
            '平顶山': [113.29, 33.75],
            '邢台': [114.48, 37.05],
            '德州': [116.29, 37.45],
            '济宁': [116.59, 35.38],
            '荆州': [112.239741, 30.335165],
            '宜昌': [111.3, 30.7],
            '义乌': [120.06, 29.32],
            '丽水': [119.92, 28.45],
            '洛阳': [112.44, 34.7],
            '秦皇岛': [119.57, 39.95],
            '株洲': [113.16, 27.83],
            '石家庄': [114.48, 38.03],
            '莱芜': [117.67, 36.19],
            '常德': [111.69, 29.05],
            '保定': [115.48, 38.85],
            '湘潭': [112.91, 27.87],
            '金华': [119.64, 29.12],
            '岳阳': [113.09, 29.37],
            '长沙': [113, 28.21],
            '衢州': [118.88, 28.97],
            '廊坊': [116.7, 39.53],
            '菏泽': [115.480656, 35.23375],
            '合肥': [117.27, 31.86],
            '武汉': [114.31, 30.52]
        };
        var map;
        var zoom = 4;
        var heatmapOverlay;
        if (!isSupportCanvas()) {
            alert('热力图目前只支持有canvas支持的浏览器,您所使用的浏览器不能使用热力图功能~');
        }
        var convertData = function (data) {
            var res = [];
            for (var i = 0; i < data.length; i++) {
                var geoCoord = geoCoordMap[data[i].name];
                if (geoCoord) {
                    res.push({
                        name: data[i].name,
                        lat: geoCoord[1],
                        lng: geoCoord[0],
                        count: data[i].value
                    });
                }
            }
            return res;
        };
        var points = convertData(data);
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(108.95, 34.27), zoom);

            //详细的参数,可以查看heatmap.js的文档 https://github.com/pa7/heatmap.js/blob/master/README.md
            //参数说明如下:
            /* visible 热力图是否显示,默认为true
             * opacity 热力的透明度,1-100
             * radius 势力图的每个点的半径大小
             * gradient  {JSON} 热力图的渐变区间 . gradient如下所示
             *	{
             .2:'rgb(0, 255, 255)',
             .5:'rgb(0, 110, 255)',
             .8:'rgb(100, 0, 255)'
             }
             value 为颜色值.
             */
            heatmapOverlay = new T.HeatmapOverlay({
                "radius": 30,

            });
            map.addOverLay(heatmapOverlay);
            heatmapOverlay.setDataSet({data: points, max: 300});
        }

        function isSupportCanvas() {
            var elem = document.createElement('canvas');
            return !!(elem.getContext && elem.getContext('2d'));
        }
        
        //是否显示热力图
        function openHeatmap() {
            heatmapOverlay.show();
        }
        
        function closeHeatmap() {
            heatmapOverlay.hide();
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示添加热力图</p>
<div>
    <input type="button" onclick="openHeatmap();" value="显示热力图">
    <input type="button" onclick="closeHeatmap();" value="关闭热力图">

</div>
</body>
</html>
图片覆盖物类：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－图片覆盖物类</title>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            height: 400px;
            width: 100%;
        }

        input, p {
            margin-top: 10px;
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <script src=" http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥" type="text/javascript"></script>
    <script type="text/javascript" src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/ImageOverlay.js"></script>
    <script>
        var map;
        var zoom = 15;
        var img;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.390750, 39.916980), zoom);
            var bd = new T.LngLatBounds(
                new T.LngLat(116.385360, 39.911380),
                new T.LngLat(116.395940, 39.921400));
            img = new T.ImageOverlay("http://lbs.tianditu.gov.cn/images/openlibrary/gugong.jpg", bd, {
                opacity: 1,
                alt: "故宫博物院"
            });
            map.addOverLay(img);
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示添加一个图片的覆盖物</p>
</body>
</html>
信息窗口：
纯文字的信息窗口：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－纯文字的信息窗口</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map, marker;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40093, 39.90313), zoom);
            var point = new T.LngLat(116.400244, 39.92556);
            marker = new T.Marker(point);// 创建标注
            map.addOverLay(marker);
            var markerInfoWin = new T.InfoWindow("信息窗口");
            marker.addEventListener("click", function () {
                marker.openInfoWindow(markerInfoWin);
            });// 将标注添加到地图中
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示纯文字的信息窗口</p>
</body>
</html>

复杂内容的信息窗口：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－添加复杂内容的信息窗口</title>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-left: 5px; font-size: 14px;  }
    </style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var center;
        var localsearch;
        var radius = 5000;
        var marker;
        var infoWin;

        function onLoad() {
        	center = new T.LngLat(116.63072, 40.054952);
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(center, zoom);
            //创建信息窗口对象
            marker = new T.Marker(center);// 创建标注
            map.addOverLay(marker);
            var infoWin1 = new T.InfoWindow();
            var sContent =
                "<div style='margin:0px;'>" +
                "<div style='margin:10px 10px; '>" +
                "<img style='float:left;margin:0px 10px' src='http://lbs.tianditu.gov.cn/images/logo.png' width='101' height='49' title='天安门'/>" +
                "<div style='margin:10px 0px 10px 120px;'>电话 : (010)88187700 <br>地址：北京市顺义区机场东路国门商务区地理信息产业园2号楼天地图大厦" +
                "</div>" +
                "<input  id='keyWord' value='机场' type='text' style='border: 1px solid #cccccc;width: 180px;height: 20px;line-height: 20px;padding-left: 10px;display: block;float: left;'>" +
                "<input style='margin-left:195px;  width: 80px;height: 24px; text-align: center; background: #5596de;color: #FFF;border: none;display: block;cursor: pointer;' type='button' value='周边搜索'  onClick=\"localsearch.searchNearby(document.getElementById('keyWord').value,marker.getLngLat(),radius)\">" +
                "</div>" +
                "</div>";
            infoWin1.setContent(sContent);
            marker.addEventListener("click", function () {
                marker.openInfoWindow(infoWin1);
            });// 将标注添加到地图中

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();
            //创建圆
            createCircle();
            //解析点数据结果
            pois(result.getPois());
        }

        //解析点数据结果
        function pois(obj) {
            if (obj) {
                for (var i = 0; i < obj.length; i++) {
                    //闭包
                    (function (i) {
                        //名称
                        var name = obj[i].name;
                        //地址
                        var address = obj[i].address;
                        //坐标
                        var lnglatArr = obj[i].lonlat.split(" ");
                        var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);
                        var winHtml = "地址:" + address;
                        //创建标注对象
                        var marker = new T.Marker(lnglat);
                        //地图上添加标注点
                        map.addOverLay(marker);
                        //注册标注点的点击事件
                        marker.addEventListener("click", function () {
                            this.showPosition(marker, name, winHtml);
                        }, this);
                    })(i);
                }
            }
        }
        //圆形
        function createCircle() {
            var config = {
                color: "blue", //折线颜色
                fillColor: "#fff",    //填充颜色。当参数为空时，折线覆盖物将没有填充效果
                weight: "3", //折线的宽度，以像素为单位
                opacity: 0.5,    //折线的透明度，取值范围0 - 1
                fillOpacity: 0.4,
                lineStyle: "solid" //折线的样式，solid或dashed
            };
            //定义该矩形的显示区域
            var circle = new T.Circle(center, radius, config);
            map.addOverLay(circle);
        }
        //显示信息框
        function showPosition(marker, name, winHtml) {
            if (infoWin) {
                map.removeOverLay(infoWin);
                infoWin = null;
            }
            var html = "<h3>" + name + "</h3>";
            html += winHtml;
            infoWin = new T.InfoWindow(html);
            marker.openInfoWindow(infoWin);
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();

        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何在地图上添加复杂内容的信息窗口。</p>

</body>
</html>

多个点的信息窗口：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－多个点的信息窗口</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map
        var zoom = 15;
        function onLoad() {

            var data_info = [[116.417854,39.921988,"地址：北京市东城区王府井大街88号乐天银泰百货八层"],
                [116.406605,39.921585,"地址：北京市东城区东华门大街"],
                [116.412222,39.912345,"地址：北京市东城区正义路甲5号"]
            ];

            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.41593, 39.92313), zoom);

            for(var i=0;i<data_info.length;i++){
                var marker = new T.Marker(new T.LngLat(data_info[i][0],data_info[i][1]));  // 创建标注
                var content = data_info[i][2];
                map.addOverLay(marker);               // 将标注添加到地图中
                addClickHandler(content,marker);
            }
            function addClickHandler(content,marker){
                marker.addEventListener("click",function(e){
                    openInfo(content,e)}
                );
            }
            function openInfo(content,e){
                var point = e.lnglat;
                marker = new T.Marker(point);// 创建标注
                var markerInfoWin = new T.InfoWindow(content,{offset:new T.Point(0,-30)}); // 创建信息窗口对象
                map.openInfoWindow(markerInfoWin,point); //开启信息窗口
            }
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>为多个点添加多个点的信息窗口</p>
</body>
</html>

获取信息窗口内容：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－获取信息窗口内容</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map, pLngLat;
        var zoom = 15;
        function onLoad() {
            //初始化地图对象
            var sContent = "天安门坐落在中国北京市中心,故宫的南侧,与天安门广场隔长安街相望,是清朝皇城的大门...";
            map = new T.Map("mapDiv");
            pLngLat = new T.LngLat(116.391280,39.907140);
            map.centerAndZoom(pLngLat, zoom);
            var infoWindow = new T.InfoWindow(sContent);
            map.openInfoWindow(infoWindow, pLngLat); //开启信息窗口
            document.getElementById("result").innerHTML = "信息窗口的内容是：<br />" + infoWindow.getContent();
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示获取信息窗口内容</p>
<div id="result"></div>
</body>
</html>
地图工具：
标注工具：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－标注工具</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, markerTool
        var listener = null;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            //允许鼠标双击放大地图
            map.enableScrollWheelZoom();

            //创建标注工具对象
            markerTool = new T.MarkTool(map, {follow: true});
        }
        
        function editMarker() {
            var markers = markerTool.getMarkers()
            for (var i = 0; i < markers.length; i++) {
                markers[i].enableDragging();
            }
        }
        
        function endeditMarker() {
            var markers = markerTool.getMarkers()
            for (var i = 0; i < markers.length; i++) {
                markers[i].disableDragging();
            }
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<div >
    <p>本示例演示如何在地图上用鼠标添加点标注。</p>
    <input type="button" value="开 启" onClick="endeditMarker();markerTool.open();"/>
    <input type="button" value="关 闭" onClick="markerTool.close();"/>
    <input type="button" value="编 辑" onClick="editMarker();"/>
</div>
</body>
</html>
矩形工具：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－矩形工具</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, rectTool;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            //允许鼠标滚轮放大地图
            map.enableScrollWheelZoom();

            rectTool = new T.RectangleTool(map);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何在地图上用鼠标画矩形。</p>
<div  >
    <input type="button" value="开启" onClick="rectTool.open();"/>
    <input type="button" value="关闭" onClick="rectTool.close();"/>
</div>
</body>
</html>
测距工具：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－测距工具</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, lineTool
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            //允许鼠标双击放大地图
            map.enableScrollWheelZoom();
            var config = {
                showLabel: true

            };
            //创建标注工具对象
            lineTool = new T.PolylineTool(map, config);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何在地图上测距。</p>
<div>
    <input type="button" value="开启" onClick="lineTool.open();"/>
    <input type="button" value="关闭" onClick="lineTool.close();"/>
</div>
</body>
</html>
测面工具：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－测面工具</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, polygonTool;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            //允许鼠标双击放大地图
            map.enableScrollWheelZoom();
            var config = {
                showLabel: true,
                color: "blue", weight: 3, opacity: 0.5, fillColor: "#FFFFFF", fillOpacity: 0.5
            };
            //创建标注工具对象
            polygonTool = new T.PolygonTool(map, config);

        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<div >
    <p>本示例演示如何在地图上测面。</p>
    <input type="button" value="开启" onClick="polygonTool.open();"/>
    <input type="button" value="关闭" onClick="polygonTool.close();"/>
</div>
</body>
</html>
画圆工具：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－画圆工具</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, circleTool
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            //允许鼠标滚轮放大地图
            map.enableScrollWheelZoom();
            circleTool = new T.CircleTool(map
                    ,{ color: "blue", weight: 3, opacity: 0.5, fillColor: "#FFFFFF", fillOpacity: 0.5}
            );
            circleTool.on('draw', function (e) {
                onDrawCircle(e.currentCenter, e.currentRadius);

            });
        }
        
        function onDrawCircle(center, radius) {
            document.getElementById('info').value = "圆的半径是 " + parseInt(radius) + " 米";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何在地图上用鼠标画圆。<p>
<div >
    <input type="button" value="开启" onClick="circleTool.open();"/>
    <input type="button" value="关闭" onClick="circleTool.close();"/>
    <input type="text" id="info" value=""/>
</div>
</body>
</html>
工具集合：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－工具集合</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "微软雅黑";
        }

        #mapDiv {
            height: 400px;
            width: 100%;
        }

        p,input {
            margin-top: 10px;
            margin-left: 5px;
            font-size: 14px;
        }
    </style>
    <script>
        var map, zoom = 12, handler;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            //允许鼠标双击放大地图
            map.enableScrollWheelZoom();
            
            var config = {
                showLabel: true,
                color: "blue", weight: 3, opacity: 0.5, fillColor: "#FFFFFF", fillOpacity: 0.5
            };
            //创建标注工具对象
            polygonTool = new T.PolygonTool(map, config);
        }

        function openPolygonTool() {
            if (handler) handler.close();
            handler = new T.PolygonTool(map);
            handler.open();
        }

        function openPolylineTool() {
            if (handler) handler.close();
            handler = new T.PolylineTool(map);
            handler.open();
        }

        function openMarkerTool() {
            if (handler) handler.close();
            handler = new T.MarkTool(map, {follow: true});
            handler.open();
        }

        function openRectangleTool() {
            if (handler) handler.close();
            handler = new T.RectangleTool(map, {follow: true});
            handler.open();
        }
        function openCircleTool() {
            if (handler) handler.close();
            handler = new T.CircleTool(map, {follow: true});
            handler.open();
        }

        function getLayerCount() {
            return map.getOverlays().length;

        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示多种覆盖物工具</p>
<div>
    <input type="button" value="点工具" onClick='openMarkerTool() '/>
    <input type="button" value="多边形工具" onClick='openPolygonTool() '/>
    <input type="button" value="线工具" onClick='openPolylineTool() '/>
    <input type="button" value="矩形工具" onClick='openRectangleTool() '/>
    <input type="button" value="画圆工具" onClick='openCircleTool() '/>
    <input type="button" value="获取图层个数" onClick='alert(getLayerCount()) '/>
    <input type="button" value="清除所有" onClick='map.clearOverLays()'/>
</div>
</body>
</html>
事件：
地图点击事件：
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<meta name="keywords" content="天地图"/>
<title>天地图－地图API－范例－地图点击事件</title>
	<script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
	<style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
	<script>
	var map;
	var zoom = 12;
	function onLoad()
	{
		map = new  T.Map('mapDiv');
		map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
	}
	
	function addMapClick()
	{
		removeMapClick();
		map.addEventListener("click",MapClick);
	}

	function removeMapClick()
	{
		map.removeEventListener("click",MapClick);
	}
	
	function MapClick(e)
	{
		alert(e.lnglat.getLng()+","+e.lnglat.getLat());
	}
	
</script>
</head>
<body onLoad="onLoad()">
	<div id="mapDiv" ></div>
	<p>本示例演示如何给地图注册点击事件。</p>
	<div>
		地图点击事件：
		<input type="button" value="注册" onClick="addMapClick();"/>
		<input type="button" value="移除" onClick="removeMapClick();"/>
	</div>
</body>
</html>
地图注册地图移动停止后的事件。：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－地图停止事件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
        }

        function addMapMoveend() {
            //移除地图的移动停止事件
            removeMapMoveend();
            map.addEventListener("moveend", MapMoveend);
        }

        function removeMapMoveend() {
            //移除地图的移动停止事件
            map.removeEventListener("moveend", MapMoveend);
        }
        
        function MapMoveend(e) {
            alert(e.target.getCenter().getLng() + "," + e.target.getCenter().getLat());

        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何给地图注册地图移动停止后的事件。</p>
<div>
    地图停止事件：
    <input type="button" value="注册" onClick="addMapMoveend();"/>
    <input type="button" value="移除" onClick="removeMapMoveend();"/>
</div>
</body>
</html>
在地图注册的鼠标滑动事件：
<!DOCTYPE html>
<html> 
<head> 
<meta http-equiv="content-Type" content="text/html; charset=utf-8"/>
<meta name="keywords" content="天地图"/> 
<title>天地图－地图API－范例－在地图注册的鼠标滑动事件</title>
	<script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
	<style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
	<script type="text/javascript" >
	var map,zoom=12;
	function onLoad()
	{
		//初始化地图对象
	   	map=new T.Map("mapDiv");
	   	//设置显示地图的中心点和级别
		map.centerAndZoom(new T.LngLat(116.40969,39.89945),zoom);
	}
	
	function addMapMousemove()
	{
		removeMapMousemove();
		map.addEventListener("mousemove",MapMousemove);
	}
	
	function removeMapMousemove()
	{
		map.removeEventListener("mousemove",MapMousemove);
	}

	function MapMousemove(e)
	{
		document.getElementById("info").value = e.lnglat.getLng().toFixed(6)+","+e.lnglat.getLat().toFixed(6)
	}
	
</script>
</head> 
<body onLoad="onLoad()"> 
	<div id="mapDiv" ></div>
	<p>本示例演示如何在地图注册的鼠标滑动事件。</p>
	<div >
		<p>鼠标在地图上的滑动事件：</p>
		<input type="button" value="注册" onClick="addMapMousemove();"/>
		<input type="button" value="移除" onClick="removeMapMousemove();"/>
		<p>鼠标所在位置坐标：<p>
		<input type="text" id="info" value=""/>
	</div> 
</body> 
</html>
标注点击事件：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－标注点击事件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, marker
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //创建标注对象
            marker = new T.Marker(new T.LngLat(116.4117, 39.9068));
            //向地图上添加标注
            map.addOverLay(marker);
        }

        function addMarkerClick() {
            //移除标注的点击事件，防止多次注册
            removeMarkerClick();
            //注册标注的点击事件
            marker.addEventListener("click", MarkerClick);
        }

        function removeMarkerClick() {
            //移除标注的点击事件
            marker.removeEventListener("click", MarkerClick);
        }

        function MarkerClick(e) {
            alert(e.lnglat.getLng() + "," + e.lnglat.getLat());

        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何给标注注册点击事件。</p>
<div >
    <p>标注点击事件：</p>
    <input type="button" value="注册" onClick="addMarkerClick();"/>
    <input type="button" value="移除" onClick="removeMarkerClick();"/>
</div>
</body>
</html>
线点击事件：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－线点击事件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, line, lineclick;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);
            var points = [];
            points.push(new T.LngLat(116.41136, 39.97569));
            points.push(new T.LngLat(116.411794, 39.9068));
            points.push(new T.LngLat(116.32969, 39.92940));
            points.push(new T.LngLat(116.385438, 39.90610));
            //创建线对象
            line = new T.Polyline(points);
            //向地图上添加线
            map.addOverLay(line);
        }

        function addLineClick() {
            //移除线的点击事件，防止多次注册
            removeLineClick();
            //注册线的点击事件
           line.addEventListener( "click",LineClick);
        }

        function removeLineClick() {
            //移除线的点击事件
            line.removeEventListener( "click",LineClick);
        }
        
        function LineClick(e) {
            alert("您点击了线");
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何在注册线点击事件。</p>
<div >
    <p>线点击事件：</p>
    <input type="button" value="注册" onClick="addLineClick();"/>
    <input type="button" value="移除" onClick="removeLineClick();"/>
</div>
</body>
</html>
面点击事件：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－面点击事件</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12, polygon, polygonclick;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.94940), zoom);

            var points = [];
            points.push(new T.LngLat(116.41136, 39.97569));
            points.push(new T.LngLat(116.411794, 39.9068));
            points.push(new T.LngLat(116.32969, 39.92940));
            points.push(new T.LngLat(116.385438, 39.90610));
            //创建面对象
            polygon = new T.Polygon(points);
            //向地图上添加面
            map.addOverLay(polygon);
        }

        function addPolygonClick() {
            //移除面的点击事件，防止多次注册
            removePolygonClick();
            //注册面的点击事件
            polygon.addEventListener("click", PolygonClick);
        }

        function removePolygonClick() {
            //移除面的点击事件
            polygon.removeEventListener("click", PolygonClick);
        }

        function PolygonClick() {
            alert("您点击了面");
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例演示如何在注册面点击事件。</p>
    <p> 面点击事件：</p>
    <input type="button" value="注册" onClick="addPolygonClick();"/>
    <input type="button" value="移除" onClick="removePolygonClick();"/>
</div>
</body>
</html>
传递事件参数：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－传递事件参数</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        p { margin-top: 10px;margin-left: 5px;font-size: 14px;}
    </style>
    <script>
        var map, zoom = 14;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.90940), zoom);
            var json_data = [[116.404,39.915],[116.383752,39.91334],[116.384502,39.932241]];
            var pointArray = new Array();
            for(var i=0;i<json_data.length;i++){
                var marker = new T.Marker(new T.LngLat(json_data[i][0], json_data[i][1])); // 创建点
                map.addOverLay(marker);    //增加点
                pointArray[i] = new T.LngLat(json_data[i][0], json_data[i][1]);
                marker.addEventListener("click",attribute);
            }
            //让所有点在视野范围内
            map.setViewport(pointArray);
            //获取覆盖物位置
            function attribute(e){
                var p = e.target;
                alert("marker的位置是" + p.getLngLat().lng + "," + p.getLngLat().lat);
            }
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示传递事件参数</p>
</body>
</html>
给覆盖物注册事件：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>天地图－地图API－范例－给覆盖物注册事件</title>
    <style type="text/css">
    body, html {
        width: 100%;
        height: 100%;
        margin: 0;
        font-family: "Microsoft YaHei"
    }

    #mapDiv {
        width: 100%;
        height: 400px;
    }

    p {
        margin-top: 10px;
        margin-left: 5px;
        font-size: 14px;
    }
    </style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map, zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.90940), zoom);
            var marker = new T.Marker(new T.LngLat(116.404, 39.945)); // 创建点
            map.addOverLay(marker);            //增加点
            marker.addEventListener("click", overlay_style);

            var polyline = new T.Polyline([
                new T.LngLat(116.344752, 39.91334),
                new T.LngLat(116.36792, 39.960866),
                new T.LngLat(116.390567, 39.906532)
            ]);   //创建折线
            map.addOverLay(polyline);          //增加折线
            polyline.addEventListener("click", overlay_style);

            var circle = new T.Circle(new T.LngLat(116.416157, 39.914004), 1000); //创建圆
            map.addOverLay(circle);            //增加圆
            circle.addEventListener("click", overlay_style);

        }

        //获取marker的属性
        function overlay_style(e) {
            var p = e.target;
            if (p instanceof T.Marker) {
                alert("该覆盖物是点，点的坐标是：" + p.getLngLat().lng + "," + p.getLngLat().lat);
            } else if (p instanceof T.Circle) {
                alert("该覆盖物是圆，圆的半径是：" + p.getRadius() + "，圆的中心点坐标是：" + p.getCenter().lng + "," + p.getCenter().lat);
            } else if (p instanceof T.Polyline) {
                alert("该覆盖物是折线，所画点的个数是：" + p.getLngLats().length);
            } else {
                alert("无法获知该覆盖物类型");
            }
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示给覆盖物注册事件</p>
</body>
</html>
地图组件：
地图拾取器：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－地图拾取器</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.89945), zoom);
            var cp = new T.CoordinatePickup(map, {callback: getLngLat})
            cp.addEvent();
        }

        function getLngLat(lnglat) {
            document.getElementById("lnglatStr").value = lnglat.lng.toFixed(6) + "," + lnglat.lat.toFixed(6);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何在地图上用鼠标获得坐标。</p>
<div >
	用鼠标在地图上点选获得地理坐标
    <input type="text" id="lnglatStr" value=""/>
</div>
</body>
</html>
聚合Marker：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－聚合Marker</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var zoom = 3;
        var map;
        function onLoad() {
            map = new T.Map('mapDiv', {
                attributionControl: false,
                inertia: false
            });
            map.centerAndZoom(new T.LngLat(116.40969, 37.43997405227057), zoom);

            var arrayObj = new Array();
            for (var i = 0; i < 500; i++) {
                var marker = new T.Marker(new T.LngLat(Math.random() * 40 + 85, Math.random() * 30 + 21), {title: i});
                arrayObj.push(marker);
            }
            var markers = new T.MarkerClusterer(map, {markers: arrayObj});
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何利用聚合接口来解决加载大量标注点到地图上产生覆盖现象的问题，并提高性能。</p>
</body>
</html>
海量密集点：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－海量密集点</title>
    <script src=" http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥" type="text/javascript"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/data/points-sample-data.js"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 4;
        var lnglats;
        var _CloudCollection;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(108.95, 34.27), zoom)
            lnglats = [];
            for (var i = 0; i < data.data.length; i++) {
                var ll = new T.LngLat(data.data[i][0], data.data[i][1])
                lnglats.push(ll)
            }
            if (document.createElement('canvas').getContext) {  // 判断当前浏览器是否支持绘制海量点
                _CloudCollection = new T.CloudMarkerCollection(lnglats, {
                    color: 'blue',
                    SizeType: TDT_POINT_SIZE_SMALL
                })
                map.addOverLay(_CloudCollection);
            } else {
                alert('此示例目前只有在IE9及以上浏览器打开');
            }
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何叠加海量密集点图层，可以实现同时在地图上展示万级、密集的点数据。兼容chrome、safari、IE9及以上浏览器。</p>
</body>
</html>
格网图层：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－格网图层</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 13;
        var img;
        var glayer
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.390750, 39.916980), zoom);
            glayer = new T.GridlineLayer({ });
            map.addLayer(glayer);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如叠加格网图层</p>
</body>
</html>
画笔：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>天地图－地图API－范例－画笔</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map, zoom = 12;
        var handler;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.90940), zoom);
            handler = new T.PaintBrushTool(map, {
                keepdrawing: true,
                style: {
                    weight: 3
                }
            });

        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例展示随意绘制的画笔工具</p>
<div>
    <input type="button" value="开启" onClick="handler.open() ;"/>
    <input type="button" value="关闭" onClick="handler.close();"/>
</div>
</body>
</html>
引擎接口工具：
搜索：
根据关键字本地搜索：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据关键字本地搜索</title>
    <style type="text/css">
        .search {
            font-size: 13px;
            border: 1px solid #999999;
        }

        .ls {
            line-height: 27px;
            padding-left: 7px;
        }

        .prompt {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
        }

        .statistics {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
            overflow-y: scroll;
            height: 150px;
        }

        .suggests {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
        }

        ;
        .lineData {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
        }

        .result {
            display: none;
            font-size: 12px;
            border: 1px solid #999999;
            line-height: 27px;
            padding-left: 7px;
        }
    </style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        var localsearch;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();

            //添加提示词
            prompt(result);

            //根据返回类型解析搜索结果
            switch (parseInt(result.getResultType())) {
                case 1:
                    //解析点数据结果
                    pois(result.getPois());
                    break;
                case 2:
                    //解析推荐城市
                    statistics(result.getStatistics());
                    break;
                case 3:
                    //解析行政区划边界
                    area(result.getArea());
                    break;
                case 4:
                    //解析建议词信息
                    suggests(result.getSuggests());
                    break;
                case 5:
                    //解析公交信息
                    lineData(result.getLineData());
                    break;
            }
        }

        //解析提示词
        function prompt(obj) {
            var prompts = obj.getPrompt();
            if (prompts) {
                var promptHtml = "";
                for (var i = 0; i < prompts.length; i++) {
                    var prompt = prompts[i];
                    var promptType = prompt.type;
                    var promptAdmins = prompt.admins;
                    var meanprompt = prompt.DidYouMean;
                    if (promptType == 1) {
                        promptHtml += "<p>您是否要在" + promptAdmins[0].name + "</strong>搜索更多包含<strong>" + obj.getKeyword() + "</strong>的相关内容？<p>";
                    }
                    else if (promptType == 2) {
                        promptHtml += "<p>在<strong>" + promptAdmins[0].name + "</strong>没有搜索到与<strong>" + obj.getKeyword() + "</strong>相关的结果。<p>";
                        if (meanprompt) {
                            promptHtml += "<p>您是否要找：<font weight='bold' color='#035fbe'><strong>" + meanprompt + "</strong></font><p>";
                        }
                    }
                    else if (promptType == 3) {
                        promptHtml += "<p style='margin-bottom:3px;'>有以下相关结果，您是否要找：</p>"
                        for (i = 0; i < promptAdmins.length; i++) {
                            promptHtml += "<p>" + promptAdmins[i].name + "</p>";
                        }
                    }
                }
                if (promptHtml != "") {
                    document.getElementById("promptDiv").style.display = "block";
                    document.getElementById("promptDiv").innerHTML = promptHtml;
                }
            }
        }

        //解析点数据结果
        function pois(obj) {
            if (obj) {
                //显示搜索列表
                var divMarker = document.createElement("div");
                //坐标数组，设置最佳比例尺时会用到
                var zoomArr = [];
                for (var i = 0; i < obj.length; i++) {
                    //闭包
                    (function (i) {
                        //名称
                        var name = obj[i].name;
                        //地址
                        var address = obj[i].address;
                        //坐标
                        var lnglatArr = obj[i].lonlat.split(",");
                        var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);

                        var winHtml = "名称:" + name + "<br/>地址:" + address;

                        //创建标注对象
                        var marker = new T.Marker(lnglat);
                        //地图上添加标注点
                        map.addOverLay(marker);
                        //注册标注点的点击事件
                        var markerInfoWin = new T.InfoWindow(winHtml, {autoPan: true});
                        marker.addEventListener("click", function () {
                            marker.openInfoWindow(markerInfoWin);
                        });

                        zoomArr.push(lnglat);

                        //在页面上显示搜索的列表
                        var a = document.createElement("a");
                        a.href = "javascript://";
                        a.innerHTML = name;
                        a.onclick = function () {
                            showPosition(marker, winHtml);
                        }
                        divMarker.appendChild(document.createTextNode((i + 1) + "."));
                        divMarker.appendChild(a);
                        divMarker.appendChild(document.createElement("br"));
                    })(i);
                }
                //显示地图的最佳级别
                map.setViewport(zoomArr);
                //显示搜索结果
                divMarker.appendChild(document.createTextNode('共' + localsearch.getCountNumber() + '条记录，分' + localsearch.getCountPage() + '页,当前第' + localsearch.getPageIndex() + '页'));
                document.getElementById("searchDiv").appendChild(divMarker);
                document.getElementById("resultDiv").style.display = "block";
            }
        }

        //显示信息框
        function showPosition(marker, winHtml) {
            var markerInfoWin = new T.InfoWindow(winHtml, {autoPan: true});
            marker.openInfoWindow(markerInfoWin);
        }

        //解析推荐城市
        function statistics(obj) {
            if (obj) {
                //坐标数组，设置最佳比例尺时会用到
                var pointsArr = [];
                var priorityCitysHtml = "";
                var allAdminsHtml = "";
                var priorityCitys = obj.priorityCitys;
                if (priorityCitys) {
                    //推荐城市显示
                    priorityCitysHtml += "在中国以下城市有结果<ul>";
                    for (var i = 0; i < priorityCitys.length; i++) {
                        priorityCitysHtml += "<li>" + priorityCitys[i].name + "(" + priorityCitys[i].count + ")</li>";
                    }
                    priorityCitysHtml += "</ul>";
                }

                var allAdmins = obj.allAdmins;
                if (allAdmins) {
                    allAdminsHtml += "更多城市<ul>";
                    for (var i = 0; i < allAdmins.length; i++) {
                        allAdminsHtml += "<li>" + allAdmins[i].name + "(" + allAdmins[i].count + ")";
                        var childAdmins = allAdmins[i].childAdmins;
                        if (childAdmins) {
                            for (var m = 0; m < childAdmins.length; m++) {
                                allAdminsHtml += "<blockquote>" + childAdmins[m].name + "(" + childAdmins[m].count + ")</blockquote>";
                            }
                        }
                        allAdminsHtml += "</li>"
                    }
                    allAdminsHtml += "</ul>";
                }
                document.getElementById("statisticsDiv").style.display = "block";
                document.getElementById("statisticsDiv").innerHTML = priorityCitysHtml + allAdminsHtml;
            }
        }

        //解析行政区划边界
        function area(obj) {
            if (obj) {
            	if(obj.points){
            		//坐标数组，设置最佳比例尺时会用到
                    var pointsArr = [];
                    var points = obj.points;
                    for (var i = 0; i < points.length; i++) {
                        var regionLngLats = [];
                        var regionArr = points[i].region.split(",");
                        for (var m = 0; m < regionArr.length; m++) {
                            var lnglatArr = regionArr[m].split(" ");
                            var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);
                            regionLngLats.push(lnglat);
                            pointsArr.push(lnglat);
                        }
                        //创建线对象
                        var line = new T.Polyline(regionLngLats, {
                            color: "blue",
                            weight: 3,
                            opacity: 1,
                            lineStyle: "dashed"
                        });
                        //向地图上添加线
                        map.addOverLay(line);
                    }
                    //显示最佳比例尺
                    map.setViewport(pointsArr);
            	}
            	if(obj.lonlat){
            		var regionArr = obj.lonlat.split(",");
            		map.panTo(new T.LngLat(regionArr[0], regionArr[1]));
            	}
            }
        }

        //解析建议词信息
        function suggests(obj) {
            if (obj) {
                //建议词提示，如果搜索类型为公交规划建议词或公交站搜索时，返回结果为公交信息的建议词。
                var suggestsHtml = "建议词提示<ul>";
                for (var i = 0; i < obj.length; i++) {
                    suggestsHtml += "<li>" + obj[i].name + "&nbsp;&nbsp;<font style='color:#666666'>" + obj[i].address + "</font></li>";
                }
                suggestsHtml += "</ul>";
                document.getElementById("suggestsDiv").style.display = "block";
                document.getElementById("suggestsDiv").innerHTML = suggestsHtml;
            }
        }

        //解析公交信息
        function lineData(obj) {
            if (obj) {
                //公交提示
                var lineDataHtml = "公交提示<ul>";
                for (var i = 0; i < obj.length; i++) {
                    lineDataHtml += "<li>" + obj[i].name + "&nbsp;&nbsp;<font style='color:#666666'>共" + obj[i].stationNum + "站</font></li>";
                }
                lineDataHtml += "</ul>";
                document.getElementById("lineDataDiv").style.display = "block";
                document.getElementById("lineDataDiv").innerHTML = lineDataHtml;
            }
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();
            document.getElementById("searchDiv").innerHTML = "";
            document.getElementById("resultDiv").style.display = "none";
            document.getElementById("statisticsDiv").innerHTML = "";
            document.getElementById("statisticsDiv").style.display = "none";
            document.getElementById("promptDiv").innerHTML = "";
            document.getElementById("promptDiv").style.display = "none";
            document.getElementById("suggestsDiv").innerHTML = "";
            document.getElementById("suggestsDiv").style.display = "none";
            document.getElementById("lineDataDiv").innerHTML = "";
            document.getElementById("lineDataDiv").style.display = "none";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例演示如何根据关键字本地搜索。</p>
    <input type="text" id="keyWord" value="天安门"/>
    <input type="button" onClick="localsearch.search(document.getElementById('keyWord').value)" value="搜索"/>
    <br/>
    <!-- 提示词面板 -->
    <div id="promptDiv" class="prompt"></div>
    <!-- 统计面板 -->
    <div id="statisticsDiv" class="statistics"></div>
    <!-- 建议词面板 -->
    <div id="suggestsDiv" class="suggests"></div>
    <!-- 公交提示面板 -->
    <div id="lineDataDiv" class="lineData"></div>
    <!-- 搜索结果面板 -->
    <div id="resultDiv" class="result">
        <div id="searchDiv"></div>
        <div id="pageDiv">
            <input type="button" value="第一页" onClick="localsearch.firstPage()"/>
            <input type="button" value="上一页" onClick="localsearch.previousPage()"/>
            <input type="button" value="下一页" onClick="localsearch.nextPage()"/>
            <input type="button" value="最后一页" onClick="localsearch.lastPage()"/>
            <br/>
            转到第<input type="text" value="1" id="pageId" size="3"/>页
            <input type="button" onClick="localsearch.gotoPage(parseInt(document.getElementById('pageId').value));"
                   value="转到"/>
        </div>
    </div>
</div>
</body>
</html> 
 

根据Bounds本地搜索：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据Bounds本地搜索</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <style type="text/css">
        body, html {
            width: 100%;
            height: 100%;
            margin: 0;
            font-family: "Microsoft YaHei";
        }

        #mapDiv {
            width: 100%;
            height: 400px;
        }

        p {
            margin-left: 5px;
            font-size: 14px;
        }
        
        .result {
            display: none;
            font-size: 12px;
            border: 1px solid #999999;
            line-height: 27px;
            padding-left: 7px;

        }
    </style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var localsearch;
        var bounds;
        var infoWin;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
            
            bounds = new T.LngLatBounds(new T.LngLat(116.36231, 39.87784), new T.LngLat(116.43954, 39.92841));
            //创建矩形
            createRect();
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();

            //创建矩形
            createRect();

            //根据返回类型解析搜索结果
            switch (parseInt(result.getResultType())) {
                case 1:
                    //解析点数据结果
                    pois(result.getPois());
                    break;
                case 2:
                    //解析统计城市
                    statistics(result.getStatistics());
                    break;
            }
        }

        //解析点数据结果
        function pois(obj) {
            if (obj) {
                //显示搜索列表
                var divMarker = document.createElement("div");
                //坐标数组，设置最佳比例尺时会用到
                for (var i = 0; i < obj.length; i++) {
                    //闭包
                    (function (i) {
                        //名称
                        var name = obj[i].name;
                        //地址
                        var address = obj[i].address;
                        //坐标
                        var lnglatArr = obj[i].lonlat.split(" ");
                        var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);

                        var winHtml = "地址:" + address;

                        //创建标注对象
                        var marker = new T.Marker(lnglat);
                        //地图上添加标注点
                        map.addOverLay(marker);
                        marker.addEventListener("click", function () {
                            this.showPosition(marker, name, winHtml);

                        }, this)
                        //在页面上显示搜索的列表
                        var a = document.createElement("a");
                        a.href = "javascript://";
                        a.innerHTML = name;
                        a.onclick = function () {
                            showPosition(marker, name, winHtml);
                        }
                        divMarker.appendChild(document.createTextNode((i + 1) + "."));
                        divMarker.appendChild(a);
                        divMarker.appendChild(document.createElement("br"));
                    })(i);
                }
                //显示搜索结果
                divMarker.appendChild(document.createTextNode('共' + localsearch.getCountNumber() + '条记录，分' + localsearch.getCountPage() + '页,当前第' + localsearch.getPageIndex() + '页'));
                document.getElementById("searchDiv").appendChild(divMarker);
                document.getElementById("resultDiv").style.display = "block";
            }
            else {
                alert("无结果");
            }
        }

        function showPosition(marker, name, winHtml) {
            if (infoWin) {
                map.removeOverLay(infoWin);
                infoWin = null;
            }
            var html = "<h3>" + name + "</h3>";
            html += winHtml;
            infoWin = new T.InfoWindow(html, new T.Point([0, 0]));
            marker.openInfoWindow(infoWin);
        }

        //解析统计城市
        function statistics(obj) {
            if (obj) {
                //坐标数组，设置最佳比例尺时会用到
                var pointsArr = [];
                var priorityCitysHtml = "";
                var allAdminsHtml = "";
                var priorityCitys = obj.priorityCitys;
                if (priorityCitys) {
                    //推荐城市显示
                    priorityCitysHtml += "在中国以下城市有结果<ul>";
                    for (var i = 0; i < priorityCitys.length; i++) {
                        priorityCitysHtml += "<li>" + priorityCitys[i].name + "(" + priorityCitys[i].count + ")</li>";
                    }
                    priorityCitysHtml += "</ul>";
                }

                var allAdmins = obj.allAdmins;
                if (allAdmins) {
                    allAdminsHtml += "更多城市<ul>";
                    for (var i = 0; i < allAdmins.length; i++) {
                        allAdminsHtml += "<li>" + allAdmins[i].name + "(" + allAdmins[i].count + ")";
                        var childAdmins = allAdmins[i].childAdmins;
                        if (childAdmins) {
                            for (var m = 0; m < childAdmins.length; m++) {
                                allAdminsHtml += "<blockquote>" + childAdmins[m].name + "(" + childAdmins[m].count + ")</blockquote>";
                            }
                        }
                        allAdminsHtml += "</li>"
                    }
                    allAdminsHtml += "</ul>";
                }
                document.getElementById("statisticsDiv").style.display = "block";
                document.getElementById("statisticsDiv").innerHTML = priorityCitysHtml + allAdminsHtml;
            }
            else {
                alert("无结果");
            }
        }

        //矩形
        function createRect() {
            var config = {
                color: "blue", //折线颜色
                fillColor: "#fff",    //填充颜色。当参数为空时，折线覆盖物将没有填充效果
                weight: "3", //折线的宽度，以像素为单位
                opacity: 0.5,    //折线的透明度，取值范围0 - 1
                fillOpacity: 0.4,
                lineStyle: "solid" //折线的样式，solid或dashed
            };
            
            //创建矩形对象
            var rect = new T.Rectangle(bounds, config);
            map.addOverLay(rect);
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();
            document.getElementById("searchDiv").innerHTML = "";
            document.getElementById("resultDiv").style.display = "none";
            document.getElementById("statisticsDiv").innerHTML = "";
            document.getElementById("statisticsDiv").style.display = "none";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div >
    <p>本示例演示如何根据Bounds进行本地搜索。</p>

        搜索内容：<input type="text" id="keyWord" value="KFC"/>
    <input type="button" onClick="localsearch.searchInBounds(document.getElementById('keyWord').value,bounds)" value="搜索"/>
    <br/>
    <!-- 提示词面板 -->
    <div id="promptDiv" class="prompt"></div>
    <!-- 统计面板 -->
    <div id="statisticsDiv" class="statistics"></div>
    <!-- 搜索结果面板 -->
    <div id="resultDiv" class="result">
        <div id="searchDiv"></div>
        <div id="pageDiv">
            <input type="button" value="第一页" onClick="localsearch.firstPage()"/>
            <input type="button" value="上一页" onClick="localsearch.previousPage()"/>
            <input type="button" value="下一页" onClick="localsearch.nextPage()"/>
            <input type="button" value="最后一页" onClick="localsearch.lastPage()"/>
            <br/>
            转到第<input type="text" value="1" id="pageId" size="3"/>页
            <input type="button" onClick="localsearch.gotoPage(parseInt(document.getElementById('pageId').value));"
                   value="转到"/>
        </div>
    </div>
</div>
</body>
</html>
根据中心点关键字周边搜索：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据中心点关键字周边搜索</title>
    <style type="text/css">
        .search {
            font-size: 13px;
            border: 1px solid #999999;
            line-height: 27px;
            padding-left: 7px;
        }

        .result {
            display: none;
            font-size: 12px;
            border: 1px solid #999999;
            line-height: 27px;
            padding-left: 7px;
        }
    </style>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var center;
        var radius = 5000;
        var infoWin;
        var localsearch;
        function onLoad() {
        	center = new T.LngLat(116.40969, 39.89945);
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(center, zoom);

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
            
            //创建圆
            createCircle();
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();

            //创建圆
            createCircle();

            //解析点数据结果
            pois(result.getPois());
        }

        //解析点数据结果
        function pois(obj) {
            if (obj) {
                //显示搜索列表
                var divMarker = document.createElement("div");
                //坐标数组，设置最佳比例尺时会用到
                var zoomArr = [];
                for (var i = 0; i < obj.length; i++) {
                    //闭包
                    (function (i) {
                        //名称
                        var name = obj[i].name;
                        //地址
                        var address = obj[i].address;
                        //坐标
                        var lnglatArr = obj[i].lonlat.split(" ");
                        var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);

                        var winHtml = "地址:" + address;

                        //创建标注对象
                        var marker = new T.Marker(lnglat);
                        //地图上添加标注点
                        map.addOverLay(marker);
                        //注册标注点的点击事件
                        marker.addEventListener("click", function () {
                            this.showPosition(marker, name, winHtml);

                        }, this)
                        zoomArr.push(lnglat);

                        //在页面上显示搜索的列表
                        var a = document.createElement("a");
                        a.href = "javascript://";
                        a.innerHTML = name;
                        a.onclick = function () {
                            showPosition(marker, name, winHtml);
                        }
                        divMarker.appendChild(document.createTextNode((i + 1) + "."));
                        divMarker.appendChild(a);
                        divMarker.appendChild(document.createElement("br"));
                    })(i);
                }
                //显示地图的最佳级别
                //map.setViewport(zoomArr);
                //显示搜索结果
                divMarker.appendChild(document.createTextNode('共' + localsearch.getCountNumber() + '条记录，分' + localsearch.getCountPage() + '页,当前第' + localsearch.getPageIndex() + '页'));
                document.getElementById("searchDiv").appendChild(divMarker);
                document.getElementById("resultDiv").style.display = "block";
            }
        }

        //显示信息框
        function showPosition(marker, name, winHtml) {
            if (infoWin) {
                map.removeOverLay(infoWin);
                infoWin = null;
            }
            var html = "<h3>" + name + "</h3>";
            html += winHtml;
            infoWin = new T.InfoWindow(html, new T.Point([0, 0]));
            marker.openInfoWindow(infoWin);
        }

        //圆形
        function createCircle() {
            var config = {
                color: "blue", //折线颜色
                fillColor: "#fff",    //填充颜色。当参数为空时，折线覆盖物将没有填充效果
                weight: "3", //折线的宽度，以像素为单位
                opacity: 0.5,    //折线的透明度，取值范围0 - 1
                fillOpacity: 0.4,
                lineStyle: "solid" //折线的样式，solid或dashed
            };
            //定义该矩形的显示区域
            var circle = new T.Circle(center, radius, config);
            map.addOverLay(circle);
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();
            document.getElementById("searchDiv").innerHTML = "";
            document.getElementById("resultDiv").style.display = "none";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例演示如何根据中心点关键字周边搜索。</p>

    <input type="text" id="keyWord" value="天安门"/>
    <input type="button" onClick="localsearch.searchNearby(document.getElementById('keyWord').value,center,radius)" value="搜索"/>
    <br/>
    <!-- 搜索结果面板 -->
    <div id="resultDiv" class="result">
        <div id="searchDiv"></div>
        <div id="pageDiv">
            <input type="button" value="第一页" onClick="localsearch.firstPage()"/>
            <input type="button" value="上一页" onClick="localsearch.previousPage()"/>
            <input type="button" value="下一页" onClick="localsearch.nextPage()"/>
            <input type="button" value="最后一页" onClick="localsearch.lastPage()"/>
            <br/>
            转到第<input type="text" value="1" id="pageId" size="3"/>页
            <input type="button" onClick="localsearch.gotoPage(parseInt(document.getElementById('pageId').value));"
                   value="转到"/>
        </div>
    </div>
</div>
</body>
</html>


根据关键字视野内搜索：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据关键字视野内搜索</title>
    <style type="text/css">
        .search {
            font-size: 13px;
            border: 1px solid #999999;
            line-height: 27px;
            padding-left: 7px;
        }

        .statistics {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
            overflow-y: scroll;
            height: 150px;
        }

        .result {
            display: none;
            font-size: 12px;
            /*border: 1px solid #999999;*/
            line-height: 27px;
            padding-left: 7px;
        }
    </style>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var localsearch;
        var infoWin;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();

            //根据返回类型解析搜索结果
            switch (parseInt(result.getResultType())) {
                case 1:
                    //解析点数据结果
                    pois(result.getPois());
                    break;
                case 2:
                    //解析统计城市
                    statistics(result.getStatistics());
                    break;
            }
        }

        //解析点数据结果
        function pois(obj) {
            if (obj) {
                //显示搜索列表
                var divMarker = document.createElement("div");
                //坐标数组，设置最佳比例尺时会用到
                var zoomArr = [];
                for (var i = 0; i < obj.length; i++) {
                    //闭包
                    (function (i) {
                        //名称
                        var name = obj[i].name;
                        //地址
                        var address = obj[i].address;
                        //坐标
                        var lnglatArr = obj[i].lonlat.split(" ");
                        var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);

                        var winHtml = "地址:" + address;

                        //创建标注对象
                        var marker = new T.Marker(lnglat);
                        //地图上添加标注点
                        map.addOverLay(marker);
                        //注册标注点的点击事件
                        marker.addEventListener("click", function () {
                            this.showPosition(marker, name, winHtml);

                        }, this);
                        zoomArr.push(lnglat);

                        //在页面上显示搜索的列表
                        var a = document.createElement("a");
                        a.href = "javascript://";
                        a.innerHTML = name;
                        a.onclick = function () {
                            showPosition(marker, name, winHtml);
                        }
                        divMarker.appendChild(document.createTextNode((i + 1) + "."));
                        divMarker.appendChild(a);
                        divMarker.appendChild(document.createElement("br"));
                    })(i);
                }
                //显示搜索结果
                divMarker.appendChild(document.createTextNode('共' + localsearch.getCountNumber() + '条记录，分' + localsearch.getCountPage() + '页,当前第' + localsearch.getPageIndex() + '页'));
                document.getElementById("searchDiv").appendChild(divMarker);
                document.getElementById("resultDiv").style.display = "block";
            }
            else {
                alert("无结果");
            }
        }

        function showPosition(marker, name, winHtml) {
            if (infoWin) {
                map.removeOverLay(infoWin);
                infoWin = null;
            }
            var html = "<h5>" + name + "</h5>";
            html += winHtml;
            infoWin = new T.InfoWindow(html, new T.Point([0, 0]));
            marker.openInfoWindow(infoWin);

        }

        //解析统计城市
        function statistics(obj) {
            if (obj) {
                //坐标数组，设置最佳比例尺时会用到
                var pointsArr = [];
                var priorityCitysHtml = "";
                var allAdminsHtml = "";
                var priorityCitys = obj.priorityCitys;
                if (priorityCitys) {
                    //推荐城市显示
                    priorityCitysHtml += "在中国以下城市有结果<ul>";
                    for (var i = 0; i < priorityCitys.length; i++) {
                        priorityCitysHtml += "<li>" + priorityCitys[i].name + "(" + priorityCitys[i].count + ")</li>";
                    }
                    priorityCitysHtml += "</ul>";
                }

                var allAdmins = obj.allAdmins;
                if (allAdmins) {
                    allAdminsHtml += "更多城市<ul>";
                    for (var i = 0; i < allAdmins.length; i++) {
                        allAdminsHtml += "<li>" + allAdmins[i].name + "(" + allAdmins[i].count + ")";
                        var childAdmins = allAdmins[i].childAdmins;
                        if (childAdmins) {
                            for (var m = 0; m < childAdmins.length; m++) {
                                allAdminsHtml += "<blockquote>" + childAdmins[m].name + "(" + childAdmins[m].count + ")</blockquote>";
                            }
                        }
                        allAdminsHtml += "</li>"
                    }
                    allAdminsHtml += "</ul>";
                }
                document.getElementById("statisticsDiv").style.display = "block";
                document.getElementById("statisticsDiv").innerHTML = priorityCitysHtml + allAdminsHtml;
            }
            else {
                alert("无结果");
            }
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();
            document.getElementById("searchDiv").innerHTML = "";
            document.getElementById("resultDiv").style.display = "none";
            document.getElementById("statisticsDiv").innerHTML = "";
            document.getElementById("statisticsDiv").style.display = "none";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div style="position:absolute;">
    <p>本示例演示如何根据关键字视野内搜索。</p>

    <input type="text" id="keyWord" value="中关村"/>
    <input type="button" onClick="localsearch.search(document.getElementById('keyWord').value,2)" value="搜索"/>

    <br/>
    <!-- 提示词面板 -->
    <div id="promptDiv" class="prompt"></div>
    <!-- 统计面板 -->
    <div id="statisticsDiv" class="statistics"></div>
    <!-- 搜索结果面板 -->
    <div id="resultDiv" class="result">
        <div id="searchDiv"></div>
        <div id="pageDiv">
            <input type="button" value="第一页" onClick="localsearch.firstPage()"/>
            <input type="button" value="上一页" onClick="localsearch.previousPage()"/>
            <input type="button" value="下一页" onClick="localsearch.nextPage()"/>
            <input type="button" value="最后一页" onClick="localsearch.lastPage()"/>
            <br/>
            转到第<input type="text" value="1" id="pageId" size="3"/>页
            <input type="button" onClick="localsearch.gotoPage(parseInt(document.getElementById('pageId').value));"
                   value="转到"/>
        </div>
    </div>
</div>
</body>
</html>
根据关键字搜索建议词：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据关键字搜索建议词</title>
    <style type="text/css">
        ul, li {
            list-style: none;
        }

        .search {
            font-size: 13px;
            border: 1px solid #999999;
            line-height: 27px;
            padding-left: 7px;
        }

        .suggests {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
        }
    </style>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var localsearch;
        var infoWin;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();

            //解析建议词信息
            suggests(result.getSuggests());
        }

        //解析建议词信息
        function suggests(obj) {
            if (obj) {
                //建议词提示，如果搜索类型为公交规划建议词或公交站搜索时，返回结果为公交信息的建议词。
                var suggestsHtml = "<div style='margin-left:8px;'>建议词提示</div><ul>";
                for (var i = 0; i < obj.length; i++) {
                    suggestsHtml += "<li>" + obj[i].name + "&nbsp;&nbsp;<font style='color:#666666'>" + obj[i].address + "</font></li>";
                }
                suggestsHtml += "</ul>";
                document.getElementById("suggestsDiv").style.display = "block";
                document.getElementById("suggestsDiv").innerHTML = suggestsHtml;
            }
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();
            document.getElementById("suggestsDiv").innerHTML = "";
            document.getElementById("suggestsDiv").style.display = "none";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何根据关键字搜索建议词。</p>
<div>
    <!-- 搜索面板 -->
    <p> 搜索内容：</p>
    <input type="text" id="keyWord" value="中关村"/>
    <input type="button" onClick="localsearch.search(document.getElementById('keyWord').value,4)" value="搜索"/>
    <br/>
    <!-- 建议词面板 -->
    <div id="suggestsDiv" class="suggests"></div>
</div>
</body>
</html>
根据关键字搜索公交规划建议词：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据关键字搜索公交规划建议词</title>
    <style type="text/css">ul,li{list-style:none;}  .search{font-size:13px; border:1px solid #999999;line-height:27px; padding-left:7px;}  .suggests{display: none; font-size:13px; border:1px solid #999999;}
    </style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var localsearch;
        var infoWin;
        function onLoad()
        {
            //初始化地图对象
            map=new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969,39.89945),zoom);
            //允许鼠标滚轮缩放地图

            var config = {
                pageCapacity:10,	//每页显示的数量
                onSearchComplete:localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map,config);
        }

        function localSearchResult(result)
        {
            //清空地图及搜索列表
            clearAll();

            //解析建议词信息
            suggests(result.getSuggests());
        }

        //解析建议词信息
        function suggests(obj)
        {
            if(obj)
            {
                //建议词提示，如果搜索类型为公交规划建议词或公交站搜索时，返回结果为公交信息的建议词。
                var suggestsHtml = "<div style='margin-left:8px;'>建议词提示</div><ul>";
                for(var i=0;i<obj.length;i++)
                {
                    suggestsHtml += "<li>" + obj[i].name + "&nbsp;&nbsp;<font style='color:#666666'>"+obj[i].address+"</font></li>";
                }
                suggestsHtml += "</ul>";
                document.getElementById("suggestsDiv").style.display = "block";
                document.getElementById("suggestsDiv").innerHTML = suggestsHtml;
            }
        }

        //清空地图及搜索列表
        function clearAll()
        {
            map.clearOverLays();
            document.getElementById("suggestsDiv").innerHTML = "";
            document.getElementById("suggestsDiv").style.display = "none";
        }
    </script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如何根据关键字搜索建议词。</p>
<div>
        搜索内容：<input type="text" id="keyWord" value="中关村"/>
    <input type="button" onClick="localsearch.search(document.getElementById('keyWord').value,4)" value="搜索"/>
    <br/>
    <!-- 建议词面板 -->
    <div id="suggestsDiv" class="suggests"></div>
</div>
</body>
</html>

根据关键字搜索纯POI（不搜公交线）：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据关键字搜索纯POI（不搜公交线）</title>
    <style type="text/css">
        .search {
            font-size: 13px;
            border: 1px solid #999999;
        }

        .ls {
            line-height: 27px;
            padding-left: 7px;
        }

        .prompt {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
        }

        .statistics {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
            overflow-y: scroll;
            height: 150px;
        }

        .suggests {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
        }

        .lineData {
            display: none;
            font-size: 13px;
            border: 1px solid #999999;
        }

        .result {
            display: none;
            font-size: 12px;
            border: 1px solid #999999;
            line-height: 27px;
            padding-left: 7px;
        }
    </style>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var localsearch;
        var infoWin;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();

            //添加提示词
            prompt(result);

            //根据返回类型解析搜索结果
            switch (parseInt(result.getResultType())) {
                case 1:
                    //解析点数据结果
                    pois(result.getPois());
                    break;
                case 2:
                    //解析推荐城市
                    statistics(result.getStatistics());
                    break;
                case 3:
                    //解析行政区划边界
                    area(result.getArea());
                    break;
            }
        }

        //解析提示词
        function prompt(obj) {
            var prompts = obj.getPrompt();
            if (prompts) {
                var promptHtml = "";
                for (var i = 0; i < prompts.length; i++) {
                    var prompt = prompts[i];
                    var promptType = prompt.type;
                    var promptAdmins = prompt.admins;
                    var meanprompt = prompt.DidYouMean;
                    if (promptType == 1) {
                        promptHtml += "<p>您是否要在" + promptAdmins[0].name + "</strong>搜索更多包含<strong>" + obj.getKeyword() + "</strong>的相关内容？<p>";
                    }
                    else if (promptType == 2) {
                        promptHtml += "<p>在<strong>" + promptAdmins[0].name + "</strong>没有搜索到与<strong>" + obj.getKeyword() + "</strong>相关的结果。<p>";
                        if (meanprompt) {
                            promptHtml += "<p>您是否要找：<font weight='bold' color='#035fbe'><strong>" + meanprompt + "</strong></font><p>";
                        }
                    }
                    else if (promptType == 3) {
                        promptHtml += "<p style='margin-bottom:3px;'>有以下相关结果，您是否要找：</p>"
                        for (i = 0; i < promptAdmins.length; i++) {
                            promptHtml += "<p>" + promptAdmins[i].name + "</p>";
                        }
                    }
                }
                if (promptHtml != "") {
                    document.getElementById("promptDiv").style.display = "block";
                    document.getElementById("promptDiv").innerHTML = promptHtml;
                }
            }
        }

        //解析点数据结果
        function pois(obj) {
            if (obj) {
                //显示搜索列表
                var divMarker = document.createElement("div");
                //坐标数组，设置最佳比例尺时会用到
                var zoomArr = [];
                for (var i = 0; i < obj.length; i++) {
                    //闭包
                    (function (i) {
                        //名称
                        var name = obj[i].name;
                        //地址
                        var address = obj[i].address;
                        //坐标
                        var lnglatArr = obj[i].lonlat.split(" ");
                        var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);

                        var winHtml = "地址:" + address;

                        //创建标注对象
                        var marker = new T.Marker(lnglat);
                        //地图上添加标注点
                        map.addOverLay(marker);
                        //注册标注点的点击事件
                        marker.addEventListener("click", function () {
                            this.showPosition(marker, name, winHtml);

                        }, this);
                        zoomArr.push(lnglat);

                        //在页面上显示搜索的列表
                        var a = document.createElement("a");
                        a.href = "javascript://";
                        a.innerHTML = name;
                        a.onclick = function () {
                            showPosition(marker, name, winHtml);
                        }
                        divMarker.appendChild(document.createTextNode((i + 1) + "."));
                        divMarker.appendChild(a);
                        divMarker.appendChild(document.createElement("br"));
                    })(i);
                }
                //显示地图的最佳级别
                map.setViewport(zoomArr);
                //显示搜索结果
                divMarker.appendChild(document.createTextNode('共' + localsearch.getCountNumber() + '条记录，分' + localsearch.getCountPage() + '页,当前第' + localsearch.getPageIndex() + '页'));
                document.getElementById("searchDiv").appendChild(divMarker);
                document.getElementById("resultDiv").style.display = "block";
            }
        }

        //显示信息框
        function showPosition(marker, name) {
            if (infoWin) {
                map.removeOverLay(infoWin);
                infoWin = null;
            }
            var html = "<h5>" + name + "</h5>";
            infoWin = new T.InfoWindow(html, new T.Point([0, 0]));
            marker.openInfoWindow(infoWin);
        }

        //解析推荐城市
        function statistics(obj) {
            if (obj) {
                //坐标数组，设置最佳比例尺时会用到
                var pointsArr = [];
                var priorityCitysHtml = "";
                var allAdminsHtml = "";
                var priorityCitys = obj.priorityCitys;
                if (priorityCitys) {
                    //推荐城市显示
                    priorityCitysHtml += "在中国以下城市有结果<ul>";
                    for (var i = 0; i < priorityCitys.length; i++) {
                        priorityCitysHtml += "<li>" + priorityCitys[i].name + "(" + priorityCitys[i].count + ")</li>";
                    }
                    priorityCitysHtml += "</ul>";
                }

                var allAdmins = obj.allAdmins;
                if (allAdmins) {
                    allAdminsHtml += "更多城市<ul>";
                    for (var i = 0; i < allAdmins.length; i++) {
                        allAdminsHtml += "<li>" + allAdmins[i].name + "(" + allAdmins[i].count + ")";
                        var childAdmins = allAdmins[i].childAdmins;
                        if (childAdmins) {
                            for (var m = 0; m < childAdmins.length; m++) {
                                allAdminsHtml += "<blockquote>" + childAdmins[m].name + "(" + childAdmins[m].count + ")</blockquote>";
                            }
                        }
                        allAdminsHtml += "</li>"
                    }
                    allAdminsHtml += "</ul>";
                }
                document.getElementById("statisticsDiv").style.display = "block";
                document.getElementById("statisticsDiv").innerHTML = priorityCitysHtml + allAdminsHtml;
            }
        }

        //解析行政区划边界
        function area(obj) {
            if (obj) {
            	if(obj.points){
	                //坐标数组，设置最佳比例尺时会用到
	                var pointsArr = [];
	                var points = obj.points;
	                for (var i = 0; i < points.length; i++) {
	                    var regionLngLats = [];
	                    var regionArr = points[i].region.split(",");
	                    for (var m = 0; m < regionArr.length; m++) {
	                        var lnglatArr = regionArr[m].split(" ");
	                        var lnglat = new T.LngLat(lnglatArr[0], lnglatArr[1]);
	                        regionLngLats.push(lnglat);
	                        pointsArr.push(lnglat);
	                    }
	                    //创建线对象
	                    var line = new T.Polyline(regionLngLats, {
	                        strokeColor: "blue",
	                        strokeWeight: 3,
	                        strokeOpacity: 1,
	                        strokeStyle: "dashed"
	                    });
	                    //向地图上添加线
	                    map.addOverLay(line);
	                }
	                //显示最佳比例尺
	                map.setViewport(pointsArr);
            	}
            	if(obj.lonlat){
            		var regionArr = obj.lonlat.split(",");
            		map.panTo(new T.LngLat(regionArr[0], regionArr[1]));
            	}
            }
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();
            document.getElementById("searchDiv").innerHTML = "";
            document.getElementById("resultDiv").style.display = "none";
            document.getElementById("statisticsDiv").innerHTML = "";
            document.getElementById("statisticsDiv").style.display = "none";
            document.getElementById("promptDiv").innerHTML = "";
            document.getElementById("promptDiv").style.display = "none";
            document.getElementById("suggestsDiv").innerHTML = "";
            document.getElementById("suggestsDiv").style.display = "none";
            document.getElementById("lineDataDiv").innerHTML = "";
            document.getElementById("lineDataDiv").style.display = "none";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何根据关键字搜索纯POI（不搜公交线）</p>
<div>
    <input type="text" id="keyWord" value="中关村"/>
    <input type="button" onClick="localsearch.search(document.getElementById('keyWord').value,7)" value="搜索"/>

    <br/>
    <!-- 提示词面板 -->
    <div id="promptDiv" class="prompt"></div>
    <!-- 统计面板 -->
    <div id="statisticsDiv" class="statistics"></div>
    <!-- 建议词面板 -->
    <div id="suggestsDiv" class="suggests"></div>
    <!-- 公交提示面板 -->
    <div id="lineDataDiv" class="lineData"></div>
    <!-- 搜索结果面板 -->
    <div id="resultDiv" class="result">
        <div id="searchDiv"></div>
        <div id="pageDiv">
            <input type="button" value="第一页" onClick="localsearch.firstPage()"/>
            <input type="button" value="上一页" onClick="localsearch.previousPage()"/>
            <input type="button" value="下一页" onClick="localsearch.nextPage()"/>
            <input type="button" value="最后一页" onClick="localsearch.lastPage()"/>
            <br/>
            转到第<input type="text" value="1" id="pageId" size="3"/>页
            <input type="button" onClick="localsearch.gotoPage(parseInt(document.getElementById('pageId').value));"
                   value="转到"/>
        </div>
    </div>
</div>
</body>
</html> 
 

关键字输入提示词条：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－关键字输入提示词条</title>
    <style type="text/css">
    body, html {
        width: 100%;
        height: 100%;
        margin: 0;
        font-family: "Microsoft YaHei"
    }

    #mapDiv {
        width: 100%;
        height:400px
    }

    input, b, p {
        margin-left: 5px;
        font-size: 14px
    }
    
    ul, li {
        list-style: none;
    }

    .search {
        font-size: 13px;
        border: 1px solid #999999;
        line-height: 27px;
        padding-left: 7px;
    }

    .suggests {
        display: none;
        font-size: 13px;
        border: 1px solid #999999;
    }
    </style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
	<script src="http://lbs.tianditu.gov.cn/js/lib/jquery/jquery-1.7.2.min.js"></script>
    <script>
        var map;
        var zoom = 12;
        var localsearch;
        var infoWin;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            //允许鼠标滚轮缩放地图

            var config = {
                pageCapacity: 10,	//每页显示的数量
                onSearchComplete: localSearchResult	//接收数据的回调函数
            };
            //创建搜索对象
            localsearch = new T.LocalSearch(map, config);
            $("#keyWord").keyup(function () {
                localsearch.search(document.getElementById('keyWord').value,4)
            });
        }

        function localSearchResult(result) {
            //清空地图及搜索列表
            clearAll();

            //解析建议词信息
            suggests(result.getSuggests());
        }

        //解析建议词信息
        function suggests(obj) {
            if (obj) {
                //建议词提示，如果搜索类型为公交规划建议词或公交站搜索时，返回结果为公交信息的建议词。
                var suggestsHtml = "<div style='margin-left:8px;'>建议词提示</div><ul>";
                for (var i = 0; i < obj.length; i++) {
                    suggestsHtml += "<li>" + obj[i].name + "&nbsp;&nbsp;<font style='color:#666666'>" + obj[i].address + "</font></li>";
                }
                suggestsHtml += "</ul>";
                document.getElementById("suggestsDiv").style.display = "block";
                document.getElementById("suggestsDiv").innerHTML = suggestsHtml;
            }
        }

        //清空地图及搜索列表
        function clearAll() {
            map.clearOverLays();
            document.getElementById("suggestsDiv").innerHTML = "";
            document.getElementById("suggestsDiv").style.display = "none";
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如何根据关键字搜索建议词。</p>
<div>
    <!-- 搜索面板 -->
	搜索内容：<input type="text" id="keyWord" value="中关村" onpropertychange="localsearch.search(document.getElementById('keyWord').value,4)"/>
    <br/>
    <!-- 建议词面板 -->
    <div id="suggestsDiv" class="suggests"></div>

</div>
</body>
</html>

公交：
公交搜索：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－公交搜索</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;			//地图对象
        var zoom = 12;		//地图级别
        var transitRoute;	//公交搜索对象
        var obj;			//公交搜索结果
        var startLngLat;	//起点经纬度
        var endLngLat;		//终点经纬度
        var startTool;		//起点标注工具
        var endTool;		//终点标注工具
        var startIcon = "http://lbs.tianditu.gov.cn/images/bus/start.png";	//起点图标
        var endIcon = "http://lbs.tianditu.gov.cn/images/bus/end.png";		//终点图标
        var map_bus = "http://lbs.tianditu.gov.cn/images/bus/map_bus.png";
        var map_metro = "http://lbs.tianditu.gov.cn/images/bus/map_metro.png";
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            //鼠标标起点
            startTool = new T.MarkTool(map, {
                icon: new T.Icon({
                    iconUrl: startIcon,
                    iconSize: new T.Point(44, 34),
                    iconAnchor: new T.Point(12, 31)
                }), follow: true
            });
            startTool.on("mouseup", mouseUpStartMaker);
            endTool = new T.MarkTool(map, {
                icon: new T.Icon({
                    iconUrl: endIcon,
                    iconSize: new T.Point(44, 34),
                    iconAnchor: new T.Point(12, 31)
                }), follow: true
            });
            endTool.on("mouseup", mouseUpEndMaker);


            var config = {
                policy: 1,	//公交导航的策略参数
                onSearchComplete: busSearchResult	//检索完成后的回调函数
            };
            //创建公交搜索对象
            transitRoute = new T.TransitRoute(map, config);
        }

        //公交搜索
        function searchBus() {
            //清空显示列表
            document.getElementById("resultDiv").innerHTML = "";
            //清空地图
            map.clearOverLays();

            //起点经纬度
            var startVal = document.getElementById("start").value.split(",");
            startLngLat = new T.LngLat(startVal[0], startVal[1]);
            //终点经纬度
            var endVal = document.getElementById("end").value.split(",");
            endLngLat = new T.LngLat(endVal[0], endVal[1]);

            //设置公交策略
            transitRoute.setPolicy(getRadioValue());
            //公交搜索
            transitRoute.search(startLngLat, endLngLat);
        }

        //显示公交搜索结果
        function busSearchResult(result) {

            if (transitRoute.getStatus() == 0) {
                //添加起始点
                createStartMarker();

                obj = result;
                var resultList = document.createElement("div");
                //获取方案个数
                var plans = result.getNumPlans();
                for (var i = 0; i < plans; i++) {
                    //获得单条公交结果对象
                    var plan = result.getPlan(i);

                    //显示单个方案面板
                    var div = document.createElement("div");
                    div.style.cssText = "font-size:12px; cursor:pointer; border:1px solid #999999;";
                    //闭包
                    (function (i) {
                        div.onclick = function () {
                            //清空地图
                            map.clearOverLays();
                            //添加起始点
                            createStartMarker();
                            //显示线路
                            createSegments(obj.getPlan(i));
                        };
                    })(i);

                    //显示方案内容
                    var describeStr = "<strong>方案" + (i + 1) + "：" + plan.getLineName().join("→") + "，总时间：" + plan.getDuration() + "分，总距离：" + Math.round(plan.getDistance()) + "米</strong>";
                    describeStr += "<div><img src='" + startIcon + "'/>" + document.getElementById("start").value + "</div>";

                    //显示每个方案的详细信息
                    var segmentNum = plan.getNumSegments();
                    for (var m = 0; m < segmentNum; m++) {
                        var line = plan.getDetails(m);
                        var segmentLine = line.getSegmentLine()[0];

                        //经过的公交或地铁的站数
                        var stationCount = (segmentLine.segmentStationCount != "") ? "，经过" + segmentLine.segmentStationCount + "站" : "";

                        //线路类型1，步行；2，公交；3，地铁；4， 地铁站内换乘
                        if (line.getSegmentType() == 1) {
                            describeStr += "步行约" + segmentLine.segmentDistance + "米，到达" + line.getStationEnd().name + "，";
                        }
                        else if (line.getSegmentType() == 2) {
                            describeStr += "乘坐" + segmentLine.direction + stationCount + "，到达" + line.getStationEnd().name + "，";
                        }
                        else if (line.getSegmentType() == 3) {
                            describeStr += "乘坐" + segmentLine.direction + stationCount + "，到达" + line.getStationEnd().name + "，";
                        }
                        else if (line.getSegmentType() == 4) {
                            describeStr += "站内换乘，";
                        }
                    }
                    //去掉最后的逗号
                    describeStr = describeStr.substring(0, describeStr.length - 1);
                    describeStr += "<div><img src='" + endIcon + "'/>" + document.getElementById("end").value + "</div>";
                    div.innerHTML = describeStr;
                    resultList.appendChild(div);

                    //在地图上默认显示方案一的线路
                    if (i == 0) {
                        createSegments(result.getPlan(0));
                    }
                }
                //显示公交搜索结果
                document.getElementById("resultDiv").appendChild(resultList);
            } else {
            	alert(errorCodeMsg(transitRoute.getStatus()));
            }
        }

        //显示公交线路
        function createSegments(plan, planNum) {
            var segmentNum = plan.getNumSegments();
            for (var m = 0; m < segmentNum; m++) {
                var line = plan.getDetails(m);
                var segmentLine = line.getSegmentLine()[0];
                //显示线路
                createRoute(segmentLine.linePoint, line.getSegmentType(), line.getStationStart().lonlat, line.getStationEnd().lonlat);
                //显示换乘图标
                createMarker(line.getStationStart().lonlat, line.getStationEnd().lonlat, line.getSegmentType());
            }
        }

        //显示公交换乘图标,lnglatStartStr表示该线路的起始点，lnglatEndStr表示该线路的终点，type表示线路类型
        function createMarker(lnglatStartStr, lnglatEndStr, type) {
            var icon1;
            if (type == 2)	//公交
            {
                //公交标注
                icon1 = new T.Icon({
                    iconUrl: map_bus,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else if (type == 3)	//地铁
            {
                //地铁标注
                //   var icon = new TIcon(map_metro, new TSize(23, 23), {anchor: new TPixel(12, 12)});
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else	//地铁站内换乘
            {
                //地铁标注
                // var icon = new TIcon(map_metro, new TSize(23, 23), {anchor: new TPixel(12, 12)});
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })

            }

            if (type != 1) {
                var lnglatStartArr = lnglatStartStr.split(",");
                var lnglatStart = new T.LngLat(lnglatStartArr[0], lnglatStartArr[1]);
                var lnglatEndArr = lnglatEndStr.split(",");
                var lnglatEnd = new T.LngLat(lnglatEndArr[0], lnglatEndArr[1]);
                var startMarker = new T.Marker(lnglatStart, {icon: icon1});
                map.addOverLay(startMarker);
                var endMarker = new T.Marker(lnglatEnd, {icon: icon1});
                map.addOverLay(endMarker);
            }
        }

        //公交线路，pointsStr表示经纬度字符串，type表示线路类型1，步行；2，公交；3，地铁；4， 地铁站内换乘，lnglat表示显示公交或地铁图标的经纬度
        function createRoute(pointsStr, type, lnglatStartStr, lnglatEndStr) {

            //去掉经纬度字符串最后一个分号，并存储在一个数据中。
            var points = pointsStr.substring(0, pointsStr.length - 1).split(";");
            //存储经纬度的数组
            var lnglatArr = [];
            for (var i = 0; i < points.length; i++) {
                var lnglat = points[i].split(",");
                lnglatArr.push(new T.LngLat(lnglat[0], lnglat[1]));
            }

            //步行
            if (type == 1) {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }
            else if (type == 2)	//公交
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else if (type == 3)	//地铁
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else	//地铁站内换乘
            {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }

            //创建线对象
            var line = new T.Polyline(lnglatArr, {
                color: lineColor,
                weight: 4,
                opacity: 1,
                lineStyle: lineStyle
            });
            //向地图上添加线
            map.addOverLay(line);
        }

        //添加起始点
        function createStartMarker() {
            //向地图上添加起点
            var icon = new T.Icon({
                iconUrl: startIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var startMarker = new T.Marker(startLngLat, {icon: icon});
            map.addOverLay(startMarker);
            //向地图上添加终点
            var icon = new T.Icon({
                iconUrl: endIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var endMarker = new T.Marker(endLngLat, {icon: icon});
            map.addOverLay(endMarker);
        }

        function mouseUpStartMaker(e) {
            startLngLat = e.currentLnglat;
            document.getElementById("start").value = e.currentLnglat.getLng() + "," + e.currentLnglat.getLat();
        }

        function mouseUpEndMaker(e) {
            startLngLat = e.currentLnglat;
            document.getElementById("end").value = e.currentLnglat.getLng() + "," + e.currentLnglat.getLat();
        }

        //获得公交策略
        function getRadioValue() {
            var obj = document.getElementsByName("planType");
            for (var i = 0; i < obj.length; i++) {
                if (obj[i].checked) {
                    return obj[i].value;
                }
            }
        }
        
        function errorCodeMsg(code) {
        	switch (code) {
	    		case 1:
	    			return '找不到起点';
	    		case 2:
	    			return '找不到终点';
	    		case 3:
	    			return '规划不出线路';
	    		case 4:
	    			return '起终点距离200米以内，不返回线路';
	    		case 5:
	    			return '起终点距离500米内，返回线路';
	    		case 6:
	    			return '输入参数错误';
	    		default:
	    			return '';
    		}
        }
    </script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<div >
    <p>本示例演示如何进行公交搜索。</p>
    <!-- 查询面板 -->
    <!--<div style="font-size:13px; border:1px solid #999999; line-height:27px; padding-left:7px">-->
        <input type="radio" name="planType" value="1" checked="checked"/>较快捷
        <input type="radio" name="planType" value="2"/>少换乘
        <input type="radio" name="planType" value="4"/>少步行
        <input type="radio" name="planType" value="8"/>不坐地铁
        <br/>
        <!-- 116.34126,39.94978 116.415928,39.85608-->
        起点：<input type="text" id="start" value="116.33297,39.99932"/>
        <input type="button" value="起点" onClick="startTool.clear();startTool.open()"/>
        <br/>
        <!-- 116.43739,39.91477 116.329903,40.069522-->
        终点：<input type="text" id="end" value="116.36181,39.86875"/>
        <input type="button" value="终点" onClick="endTool.clear();endTool.open()"/>

        <input type="button" onClick="searchBus()" value="公交搜索"/>
    <!--</div>-->
    <br/>
    <!-- 结果面板 -->
    <div id="resultDiv" ></div>
</div>
</body>
</html>
根据换乘方案询公交换乘：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据换乘方案询公交换乘</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/jquery/jquery-1.7.2.min.js"></script>
    <script>
        var map;			//地图对象
        var zoom = 11;		//地图级别
        var transitRoute;	//公交搜索对象
        var obj;			//公交搜索结果
        var startLngLat;	//起点经纬度
        var endLngLat;		//终点经纬度
        var startIcon = "http://lbs.tianditu.gov.cn/images/bus/start.png";	//起点图标
        var endIcon = "http://lbs.tianditu.gov.cn/images/bus/end.png";		//终点图标
        var map_bus = "http://lbs.tianditu.gov.cn/images/bus/map_bus.png";
        var map_metro = "http://lbs.tianditu.gov.cn/images/bus/map_metro.png";
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            var config = {
                policy: 1,	//公交导航的策略参数
                onSearchComplete: busSearchResult	//检索完成后的回调函数
            };
            //创建公交搜索对象
            transitRoute = new T.TransitRoute(map, config);
        }

        //公交搜索
        function searchBus() {

            //清空地图
            map.clearOverLays();

            startLngLat = new T.LngLat(116.33297, 39.99932);	//起点经纬度
            endLngLat = new T.LngLat(116.36181, 39.86875);		//终点经纬度
            
            //设置公交策略
            var i = $("#driving_way select").val();
            transitRoute.setPolicy(i);
            //公交搜索
            transitRoute.search(startLngLat, endLngLat);
        }

        //显示公交搜索结果
        function busSearchResult(result) {

            if (transitRoute.getStatus() == 0) {
                //添加起始点
                createStartMarker();

                obj = result;
                var resultList = document.createElement("div");
                //获取方案个数
                var plans = result.getNumPlans();
                for (var i = 0; i < plans; i++) {
                    //获得单条公交结果对象
                    var plan = result.getPlan(i);
                    //清空地图
                    map.clearOverLays();
                    //添加起始点
                    createStartMarker();
                    //显示线路
                    createSegments(obj.getPlan(i));

                    //在地图上默认显示方案一的线路
                    if (i == 0) {
                        createSegments(result.getPlan(0));
                    }
                }
            } else {
            	alert(errorCodeMsg(transitRoute.getStatus()));
            }
        }

        //显示公交线路
        function createSegments(plan, planNum) {
            var segmentNum = plan.getNumSegments();
            for (var m = 0; m < segmentNum; m++) {
                var line = plan.getDetails(m);
                var segmentLine = line.getSegmentLine()[0];
                //显示线路
                createRoute(segmentLine.linePoint, line.getSegmentType(), line.getStationStart().lonlat, line.getStationEnd().lonlat);
                //显示换乘图标
                createMarker(line.getStationStart().lonlat, line.getStationEnd().lonlat, line.getSegmentType());
            }
        }

        //显示公交换乘图标,lnglatStartStr表示该线路的起始点，lnglatEndStr表示该线路的终点，type表示线路类型
        function createMarker(lnglatStartStr, lnglatEndStr, type) {
            var icon1;
            if (type == 2)	//公交
            {
                //公交标注
                icon1 = new T.Icon({
                    iconUrl: map_bus,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else if (type == 3)	//地铁
            {
                //地铁标注
                //   var icon = new TIcon(map_metro, new TSize(23, 23), {anchor: new TPixel(12, 12)});
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else	//地铁站内换乘
            {
                //地铁标注
                // var icon = new TIcon(map_metro, new TSize(23, 23), {anchor: new TPixel(12, 12)});
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })

            }

            if (type != 1) {
                var lnglatStartArr = lnglatStartStr.split(",");
                var lnglatStart = new T.LngLat(lnglatStartArr[0], lnglatStartArr[1]);
                var lnglatEndArr = lnglatEndStr.split(",");
                var lnglatEnd = new T.LngLat(lnglatEndArr[0], lnglatEndArr[1]);
                var startMarker = new T.Marker(lnglatStart, {icon: icon1});
                map.addOverLay(startMarker);
                var endMarker = new T.Marker(lnglatEnd, {icon: icon1});
                map.addOverLay(endMarker);
            }
        }

        //公交线路，pointsStr表示经纬度字符串，type表示线路类型1，步行；2，公交；3，地铁；4， 地铁站内换乘，lnglat表示显示公交或地铁图标的经纬度
        function createRoute(pointsStr, type, lnglatStartStr, lnglatEndStr) {

            //去掉经纬度字符串最后一个分号，并存储在一个数据中。
            var points = pointsStr.substring(0, pointsStr.length - 1).split(";");
            //存储经纬度的数组
            var lnglatArr = [];
            for (var i = 0; i < points.length; i++) {
                var lnglat = points[i].split(",");
                lnglatArr.push(new T.LngLat(lnglat[0], lnglat[1]));
            }

            //步行
            if (type == 1) {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }
            else if (type == 2)	//公交
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else if (type == 3)	//地铁
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else	//地铁站内换乘
            {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }

            //创建线对象
            var line = new T.Polyline(lnglatArr, {
                color: lineColor,
                weight: 4,
                opacity: 1,
                lineStyle: lineStyle
            });
            //向地图上添加线
            map.addOverLay(line);
        }

        //添加起始点
        function createStartMarker() {
            //向地图上添加起点
            var icon = new T.Icon({
                iconUrl: startIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var startMarker = new T.Marker(startLngLat, {icon: icon});
            map.addOverLay(startMarker);
            //向地图上添加终点
            var icon = new T.Icon({
                iconUrl: endIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var endMarker = new T.Marker(endLngLat, {icon: icon});
            map.addOverLay(endMarker);
        }

        function errorCodeMsg(code) {
        	switch (code) {
	    		case 1:
	    			return '找不到起点';
	    		case 2:
	    			return '找不到终点';
	    		case 3:
	    			return '规划不出线路';
	    		case 4:
	    			return '起终点距离200米以内，不返回线路';
	    		case 5:
	    			return '起终点距离500米内，返回线路';
	    		case 6:
	    			return '输入参数错误';
	    		default:
	    			return '';
    		}
        }

    </script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<div>
    <p>本示例演示如何根据换乘方案查询公交换乘。</p>
    <div id="driving_way">

        <select>
            <option value="1">较快捷</option>
            <option value="2">少换乘</option>
            <option value="4">少步行</option>
            <option value="8">不坐地铁</option>

        </select>
        <input type="button" onClick="searchBus()" value="公交搜索"/>
    </div>
    <br/>
    <!-- 结果面板 -->
    <div id="resultDiv"></div>

</div>
</body>
</html>
展示公交换乘的结果面板：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－展示公交换乘的结果面板</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/jquery/jquery-1.7.2.min.js"></script>
    <script>
        var map;			//地图对象
        var zoom = 12;		//地图级别
        var transitRoute;	//公交搜索对象
        var obj;			//公交搜索结果
        var startLngLat;	//起点经纬度
        var endLngLat;		//终点经纬度
        var startIcon = "http://lbs.tianditu.gov.cn/images/bus/start.png";	//起点图标
        var endIcon = "http://lbs.tianditu.gov.cn/images/bus/end.png";		//终点图标
        var map_bus = "http://lbs.tianditu.gov.cn/images/bus/map_bus.png";
        var map_metro = "http://lbs.tianditu.gov.cn/images/bus/map_metro.png";
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);

            var config = {
                policy: 1,	//公交导航的策略参数
                onSearchComplete: busSearchResult	//检索完成后的回调函数
            };
            //创建公交搜索对象
            transitRoute = new T.TransitRoute(map, config);
            searchBus();
        }

        //公交搜索
        function searchBus() {
            //清空显示列表
            document.getElementById("resultDiv").innerHTML = "";
            //清空地图
            map.clearOverLays();
            
            startLngLat = new T.LngLat(116.33297, 39.99932);	//起点经纬度
            endLngLat = new T.LngLat(116.36181, 39.86875);		//终点经纬度

            //公交搜索
            transitRoute.search(startLngLat, endLngLat);
        }

        //显示公交搜索结果
        function busSearchResult(result) {

            if (transitRoute.getStatus() == 0) {
                //添加起始点
                createStartMarker();

                obj = result;
                var resultList = document.createElement("div");
                //获取方案个数
                var plans = result.getNumPlans();
                for (var i = 0; i < plans; i++) {
                    //获得单条公交结果对象
                    var plan = result.getPlan(i);

                    //显示单个方案面板
                    var div = document.createElement("div");
                    div.style.cssText = "font-size:12px; cursor:pointer; border:1px solid #999999;";
                    //闭包
                    (function (i) {
                        div.onclick = function () {
                            //清空地图
                            map.clearOverLays();
                            //添加起始点
                            createStartMarker();
                            //显示线路
                            createSegments(obj.getPlan(i));
                        };
                    })(i);

                    //显示方案内容
                    var describeStr = "<strong>方案" + (i + 1) + "：" + plan.getLineName().join("→") + "，总时间：" + plan.getDuration() + "分，总距离：" + Math.round(plan.getDistance()) + "米</strong>";
                    describeStr += "<div><img src='" + startIcon + "'/>" + startLngLat.getLng()+","+startLngLat.getLat() + "</div>";

                    //显示每个方案的详细信息
                    var segmentNum = plan.getNumSegments();
                    for (var m = 0; m < segmentNum; m++) {
                        var line = plan.getDetails(m);
                        var segmentLine = line.getSegmentLine()[0];

                        //经过的公交或地铁的站数
                        var stationCount = (segmentLine.segmentStationCount != "") ? "，经过" + segmentLine.segmentStationCount + "站" : "";

                        //线路类型1，步行；2，公交；3，地铁；4， 地铁站内换乘
                        if (line.getSegmentType() == 1) {
                            describeStr += "步行约" + segmentLine.segmentDistance + "米，到达" + line.getStationEnd().name + "，";
                        }
                        else if (line.getSegmentType() == 2) {
                            describeStr += "乘坐" + segmentLine.direction + stationCount + "，到达" + line.getStationEnd().name + "，";
                        }
                        else if (line.getSegmentType() == 3) {
                            describeStr += "乘坐" + segmentLine.direction + stationCount + "，到达" + line.getStationEnd().name + "，";
                        }
                        else if (line.getSegmentType() == 4) {
                            describeStr += "站内换乘，";
                        }
                    }
                    //去掉最后的逗号
                    describeStr = describeStr.substring(0, describeStr.length - 1);
                    describeStr += "<div><img src='" + endIcon + "'/>" + endLngLat.getLng()+","+endLngLat.getLat() + "</div>";
                    div.innerHTML = describeStr;
                    resultList.appendChild(div);

                    //在地图上默认显示方案一的线路
                    if (i == 0) {
                        createSegments(result.getPlan(0));
                    }
                }
                //显示公交搜索结果
                document.getElementById("resultDiv").appendChild(resultList);
            } else {
            	alert(errorCodeMsg(transitRoute.getStatus()));
            }
        }

        //显示公交线路
        function createSegments(plan, planNum) {
            var segmentNum = plan.getNumSegments();
            for (var m = 0; m < segmentNum; m++) {
                var line = plan.getDetails(m);
                var segmentLine = line.getSegmentLine()[0];
                //显示线路
                createRoute(segmentLine.linePoint, line.getSegmentType(), line.getStationStart().lonlat, line.getStationEnd().lonlat);
                //显示换乘图标
                createMarker(line.getStationStart().lonlat, line.getStationEnd().lonlat, line.getSegmentType());
            }
        }

        //显示公交换乘图标,lnglatStartStr表示该线路的起始点，lnglatEndStr表示该线路的终点，type表示线路类型
        function createMarker(lnglatStartStr, lnglatEndStr, type) {
            var icon1;
            if (type == 2)	//公交
            {
                //公交标注
                icon1 = new T.Icon({
                    iconUrl: map_bus,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else if (type == 3)	//地铁
            {
                //地铁标注
                //   var icon = new TIcon(map_metro, new TSize(23, 23), {anchor: new TPixel(12, 12)});
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else	//地铁站内换乘
            {
                //地铁标注
                // var icon = new TIcon(map_metro, new TSize(23, 23), {anchor: new TPixel(12, 12)});
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })

            }

            if (type != 1) {
                var lnglatStartArr = lnglatStartStr.split(",");
                var lnglatStart = new T.LngLat(lnglatStartArr[0], lnglatStartArr[1]);
                var lnglatEndArr = lnglatEndStr.split(",");
                var lnglatEnd = new T.LngLat(lnglatEndArr[0], lnglatEndArr[1]);
                var startMarker = new T.Marker(lnglatStart, {icon: icon1});
                map.addOverLay(startMarker);
                var endMarker = new T.Marker(lnglatEnd, {icon: icon1});
                map.addOverLay(endMarker);
            }
        }

        //公交线路，pointsStr表示经纬度字符串，type表示线路类型1，步行；2，公交；3，地铁；4， 地铁站内换乘，lnglat表示显示公交或地铁图标的经纬度
        function createRoute(pointsStr, type, lnglatStartStr, lnglatEndStr) {

            //去掉经纬度字符串最后一个分号，并存储在一个数据中。
            var points = pointsStr.substring(0, pointsStr.length - 1).split(";");
            //存储经纬度的数组
            var lnglatArr = [];
            for (var i = 0; i < points.length; i++) {
                var lnglat = points[i].split(",");
                lnglatArr.push(new T.LngLat(lnglat[0], lnglat[1]));
            }

            //步行
            if (type == 1) {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }
            else if (type == 2)	//公交
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else if (type == 3)	//地铁
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else	//地铁站内换乘
            {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }

            //创建线对象
            var line = new T.Polyline(lnglatArr, {
                color: lineColor,
                weight: 4,
                opacity: 1,
                lineStyle: lineStyle
            });
            //向地图上添加线
            map.addOverLay(line);
        }

        //添加起始点
        function createStartMarker() {
            //向地图上添加起点
            var icon = new T.Icon({
                iconUrl: startIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var startMarker = new T.Marker(startLngLat, {icon: icon});
            map.addOverLay(startMarker);
            //向地图上添加终点
            var icon = new T.Icon({
                iconUrl: endIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var endMarker = new T.Marker(endLngLat, {icon: icon});
            map.addOverLay(endMarker);
        }

        function errorCodeMsg(code) {
        	switch (code) {
	    		case 1:
	    			return '找不到起点';
	    		case 2:
	    			return '找不到终点';
	    		case 3:
	    			return '规划不出线路';
	    		case 4:
	    			return '起终点距离200米以内，不返回线路';
	    		case 5:
	    			return '起终点距离500米内，返回线路';
	    		case 6:
	    			return '输入参数错误';
	    		default:
	    			return '';
    		}
        }

    </script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例展示公交换乘的结果面板</p>
<div>
    <!-- 结果面板 -->
    <div id="resultDiv"></div>

</div>
</body>
</html>
根据起终点经纬度查询公交换乘：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－根据起终点经纬度查询公交换乘</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/jquery/jquery-1.7.2.min.js"></script>
    <script>
        var map;			//地图对象
        var zoom = 12;		//地图级别
        var transitRoute;	//公交搜索对象
        var obj;			//公交搜索结果

        var startLngLat;	//起点经纬度
        var endLngLat;		//终点经纬度
        var startIcon = "http://lbs.tianditu.gov.cn/images/bus/start.png";	//起点图标
        var endIcon = "http://lbs.tianditu.gov.cn/images/bus/end.png";		//终点图标
        var map_bus = "http://lbs.tianditu.gov.cn/images/bus/map_bus.png";
        var map_metro = "http://lbs.tianditu.gov.cn/images/bus/map_metro.png";
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.90945), zoom);

            var config = {
                policy: 1,	//公交导航的策略参数
                onSearchComplete: busSearchResult	//检索完成后的回调函数
            };
            //创建公交搜索对象
            transitRoute = new T.TransitRoute(map, config);
            searchBus();
        }

        //公交搜索
        function searchBus() {
            //清空地图
            map.clearOverLays();
            
            startLngLat = new T.LngLat(116.33297, 39.99932);	//起点经纬度
            endLngLat = new T.LngLat(116.36181, 39.86875);		//终点经纬度
            transitRoute.search(startLngLat, endLngLat);
        }

        //显示公交搜索结果
        function busSearchResult(result) {

            if (transitRoute.getStatus() == 0) {
                //添加起始点
                createStartMarker();
                obj = result;
                //获取方案个数
                var plans = result.getNumPlans();
                for (var i = 0; i < plans; i++) {
                    //获得单条公交结果对象
                    var plan = result.getPlan(i);

                    //清空地图
                    map.clearOverLays();
                    //添加起始点
                    createStartMarker();
                    //显示线路
                    createSegments(obj.getPlan(i));

                    //在地图上默认显示方案一的线路
                    if (i == 0) {
                        createSegments(result.getPlan(0));
                    }
                }
            } else {
            	alert(errorCodeMsg(transitRoute.getStatus()));
            }
        }

        //显示公交线路
        function createSegments(plan, planNum) {
            var segmentNum = plan.getNumSegments();
            for (var m = 0; m < segmentNum; m++) {
                var line = plan.getDetails(m);
                var segmentLine = line.getSegmentLine()[0];
                //显示线路
                createRoute(segmentLine.linePoint, line.getSegmentType(), line.getStationStart().lonlat, line.getStationEnd().lonlat);
                //显示换乘图标
                createMarker(line.getStationStart().lonlat, line.getStationEnd().lonlat, line.getSegmentType());
            }
        }

        //显示公交换乘图标,lnglatStartStr表示该线路的起始点，lnglatEndStr表示该线路的终点，type表示线路类型
        function createMarker(lnglatStartStr, lnglatEndStr, type) {
            var icon1;
            if (type == 2)	//公交
            {
                //公交标注
                icon1 = new T.Icon({
                    iconUrl: map_bus,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else if (type == 3)	//地铁
            {
                //地铁标注
               icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else	//地铁站内换乘
            {
                //地铁标注
               icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })

            }

            if (type != 1) {
                var lnglatStartArr = lnglatStartStr.split(",");
                var lnglatStart = new T.LngLat(lnglatStartArr[0], lnglatStartArr[1]);
                var lnglatEndArr = lnglatEndStr.split(",");
                var lnglatEnd = new T.LngLat(lnglatEndArr[0], lnglatEndArr[1]);
                var startMarker = new T.Marker(lnglatStart, {icon: icon1});
                map.addOverLay(startMarker);
                var endMarker = new T.Marker(lnglatEnd, {icon: icon1});
                map.addOverLay(endMarker);
            }
        }

        //公交线路，pointsStr表示经纬度字符串，type表示线路类型1，步行；2，公交；3，地铁；4， 地铁站内换乘，lnglat表示显示公交或地铁图标的经纬度
        function createRoute(pointsStr, type, lnglatStartStr, lnglatEndStr) {

            //去掉经纬度字符串最后一个分号，并存储在一个数据中。
            var points = pointsStr.substring(0, pointsStr.length - 1).split(";");
            //存储经纬度的数组
            var lnglatArr = [];
            for (var i = 0; i < points.length; i++) {
                var lnglat = points[i].split(",");
                lnglatArr.push(new T.LngLat(lnglat[0], lnglat[1]));
            }

            //步行
            if (type == 1) {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }
            else if (type == 2)	//公交
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else if (type == 3)	//地铁
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else	//地铁站内换乘
            {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }

            //创建线对象
            var line = new T.Polyline(lnglatArr, {
                color: lineColor,
                weight: 4,
                opacity: 1,
                lineStyle: lineStyle
            });
            //向地图上添加线
            map.addOverLay(line);
        }

        //添加起始点
        function createStartMarker() {
            //向地图上添加起点
            var icon = new T.Icon({
                iconUrl: startIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var startMarker = new T.Marker(startLngLat, {icon: icon});
            map.addOverLay(startMarker);
            //向地图上添加终点
            var icon = new T.Icon({
                iconUrl: endIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var endMarker = new T.Marker(endLngLat, {icon: icon});
            map.addOverLay(endMarker);
        }

        function errorCodeMsg(code) {
        	switch (code) {
	    		case 1:
	    			return '找不到起点';
	    		case 2:
	    			return '找不到终点';
	    		case 3:
	    			return '规划不出线路';
	    		case 4:
	    			return '起终点距离200米以内，不返回线路';
	    		case 5:
	    			return '起终点距离500米内，返回线路';
	    		case 6:
	    			return '输入参数错误';
	    		default:
	    			return '';
    		}
        }

    </script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示根据起终点经纬度查询公交换乘</p>
</body>
</html>
公交换乘的时间和距离：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－公交换乘的时间和距离</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/jquery/jquery-1.7.2.min.js"></script>
    <script>
        var map;			//地图对象
        var zoom = 12;		//地图级别
        var transitRoute;	//公交搜索对象
        var obj;			//公交搜索结果
        var describeStr;
        var startLngLat;	//起点经纬度
        var endLngLat;		//终点经纬度
        var startIcon = "http://lbs.tianditu.gov.cn/images/bus/start.png";	//起点图标
        var endIcon = "http://lbs.tianditu.gov.cn/images/bus/end.png";		//终点图标
        var map_bus = "http://lbs.tianditu.gov.cn/images/bus/map_bus.png";
        var map_metro = "http://lbs.tianditu.gov.cn/images/bus/map_metro.png";
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 39.90945), zoom);

            var config = {
                policy: 1,	//公交导航的策略参数
                onSearchComplete: busSearchResult	//检索完成后的回调函数
            };
            //创建公交搜索对象
            transitRoute = new T.TransitRoute(map, config);
            searchBus();

        }

        //公交搜索
        function searchBus() {

        	startLngLat = new T.LngLat(116.33297, 39.99932);	//起点经纬度
            endLngLat = new T.LngLat(116.36181, 39.86875);		//终点经纬度
        	
            //清空地图
            map.clearOverLays();
            transitRoute.search(new T.LngLat(116.33297, 39.99932), new T.LngLat(116.36181, 39.86875));
            setTimeout(function () {
                alert(describeStr)
            }, "1000");
        }

        //显示公交搜索结果
        function busSearchResult(result) {

            if (transitRoute.getStatus() == 0) {
                //添加起始点
                createStartMarker();
                obj = result;
                //获取方案个数
                var plans = result.getNumPlans();
                for (var i = 0; i < plans; i++) {
                    //获得单条公交结果对象
                    var plan = result.getPlan(i);
                    describeStr = plan.getLineName().join("→") + "，总时间：" + plan.getDuration() + "分，总距离：" + Math.round(plan.getDistance()) + "米";

                    //清空地图
                    map.clearOverLays();
                    //添加起始点
                    createStartMarker();
                    //显示线路
                    createSegments(obj.getPlan(i));

                    //在地图上默认显示方案一的线路
                    if (i == 0) {
                        createSegments(result.getPlan(0));
                    }
                }
            } else {
            	alert(errorCodeMsg(transitRoute.getStatus()));
            }
        }

        //显示公交线路
        function createSegments(plan, planNum) {
            var segmentNum = plan.getNumSegments();
            for (var m = 0; m < segmentNum; m++) {
                var line = plan.getDetails(m);
                var segmentLine = line.getSegmentLine()[0];
                //显示线路
                createRoute(segmentLine.linePoint, line.getSegmentType(), line.getStationStart().lonlat, line.getStationEnd().lonlat);
                //显示换乘图标
                createMarker(line.getStationStart().lonlat, line.getStationEnd().lonlat, line.getSegmentType());
            }
        }

        //显示公交换乘图标,lnglatStartStr表示该线路的起始点，lnglatEndStr表示该线路的终点，type表示线路类型
        function createMarker(lnglatStartStr, lnglatEndStr, type) {
            var icon1;
            if (type == 2)	//公交
            {
                //公交标注
                icon1 = new T.Icon({
                    iconUrl: map_bus,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else if (type == 3)	//地铁
            {
                //地铁标注
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })
            }
            else	//地铁站内换乘
            {
                //地铁标注
                icon1 = new T.Icon({
                    iconUrl: map_metro,
                    iconSize: new T.Point(23, 23),
                    iconAnchor: new T.Point(12, 12)
                })

            }

            if (type != 1) {
                var lnglatStartArr = lnglatStartStr.split(",");
                var lnglatStart = new T.LngLat(lnglatStartArr[0], lnglatStartArr[1]);
                var lnglatEndArr = lnglatEndStr.split(",");
                var lnglatEnd = new T.LngLat(lnglatEndArr[0], lnglatEndArr[1]);
                var startMarker = new T.Marker(lnglatStart, {icon: icon1});
                map.addOverLay(startMarker);
                var endMarker = new T.Marker(lnglatEnd, {icon: icon1});
                map.addOverLay(endMarker);
            }
        }

        //公交线路，pointsStr表示经纬度字符串，type表示线路类型1，步行；2，公交；3，地铁；4， 地铁站内换乘，lnglat表示显示公交或地铁图标的经纬度
        function createRoute(pointsStr, type, lnglatStartStr, lnglatEndStr) {

            //去掉经纬度字符串最后一个分号，并存储在一个数据中。
            var points = pointsStr.substring(0, pointsStr.length - 1).split(";");
            //存储经纬度的数组
            var lnglatArr = [];
            for (var i = 0; i < points.length; i++) {
                var lnglat = points[i].split(",");
                lnglatArr.push(new T.LngLat(lnglat[0], lnglat[1]));
            }

            //步行
            if (type == 1) {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }
            else if (type == 2)	//公交
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else if (type == 3)	//地铁
            {
                var lineColor = "#2C64A7";	//线的颜色
                var lineStyle = "solid";	//线的样式
            }
            else	//地铁站内换乘
            {
                var lineColor = "#2E9531";	//线的颜色
                var lineStyle = "dashed";	//线的样式
            }

            //创建线对象
            var line = new T.Polyline(lnglatArr, {
                color: lineColor,
                weight: 4,
                opacity: 1,
                lineStyle: lineStyle
            });
            //向地图上添加线
            map.addOverLay(line);
        }

        //添加起始点
        function createStartMarker() {
            //向地图上添加起点
            var icon = new T.Icon({
                iconUrl: startIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var startMarker = new T.Marker(startLngLat, {icon: icon});
            map.addOverLay(startMarker);
            //向地图上添加终点
            var icon = new T.Icon({
                iconUrl: endIcon,
                iconSize: new T.Point(44, 34),
                iconAnchor: new T.Point(12, 31)
            })
            var endMarker = new T.Marker(endLngLat, {icon: icon});
            map.addOverLay(endMarker);
        }
        
        function errorCodeMsg(code) {
        	switch (code) {
	    		case 1:
	    			return '找不到起点';
	    		case 2:
	    			return '找不到终点';
	    		case 3:
	    			return '规划不出线路';
	    		case 4:
	    			return '起终点距离200米以内，不返回线路';
	    		case 5:
	    			return '起终点距离500米内，返回线路';
	    		case 6:
	    			return '输入参数错误';
	    		default:
	    			return '';
    		}
        }

    </script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p> 本例展示公交换乘的时间和距离</p>
</body>
</html>
逆地理编码：
使用逆地理编码接口获得详细信息，用鼠标点击地图获得详细信息：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－逆地理编码</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
        var map;
        var zoom = 12;
        var geocode;
        function onLoad()
        {
            //初始化地图对象
            map=new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969,39.89945),zoom);

            //创建对象
            geocode = new T.Geocoder();

            map.addEventListener("click", function(e){
                geocode.getLocation(e.lnglat,searchResult);
            });
        }

        function searchResult(result)
        {
            if(result.getStatus() == 0)
            {
                document.getElementById("addressMsg").innerHTML = "<font style='font-weight:700'>详细地址：</font>"+result.getAddress();

                var addressComponent = result.getAddressComponent();
                var html = "<font style='font-weight:700'>详细信息如下：</font><br/>";
                html += "<font style='font-size:12px'>此点最近地点信息："+addressComponent.address+"</font><br/>";
                html += "<font style='font-size:12px'>此点距离最近地点信息距离："+addressComponent.address_distance+"米</font><br/>";
                html += "<font style='font-size:12px'>此点在最近地点信息方向："+addressComponent.address_position+"</font><br/>";
                html += "<font style='font-size:12px'>此点所在国家或城市或区县："+addressComponent.city+"</font><br/>";
                html += "<font style='font-size:12px'>距离此点最近poi点："+addressComponent.poi+"</font><br/>";
                html += "<font style='font-size:12px'>距离此点最近poi点的距离："+addressComponent.poi_distance+"米</font><br/>";
                html += "<font style='font-size:12px'>此点在最近poi点的方向："+addressComponent.poi_position+"</font><br/>";
                html += "<font style='font-size:12px'>距离此点最近的路："+addressComponent.road+"</font><br/>";
                html += "<font style='font-size:12px'>此点距离此路的距离："+addressComponent.road_distance+"米</font><br/>";
                document.getElementById("detailedAddress").innerHTML = html;
            }
            else
            {
                document.getElementById("addressMsg").innerHTML = "<font style='font-weight:700'>服务器返回状态：</font>"+result.getStatus();
                document.getElementById("detailedAddress").innerHTML = "<font style='font-weight:700'>服务器返回响应信息：</font>"+result.getMsg();
            }
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<div >
    <p>本示例演示如何使用逆地理编码接口获得详细信息，用鼠标点击地图获得详细信息。</p>
    <div id="addressMsg" style="font-size:14px"></div>
    <br/>
    <div id="detailedAddress" style="font-size:14px"></div>
</div>
</body>
</html>
地理编码：
如何使用地理编码接口获得坐标信息：
<!DOCTYPE html> 
<html> 
<head> 
<meta http-equiv="content-type" content="text/html; charset=utf-8"/> 
<meta name="keywords" content="天地图"/> 
<title>天地图－地图API－范例－地理编码</title>
<style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
<script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
<script>
	var map;
	var zoom = 12;
	var geocoder;
	function onLoad()
	{ 
		//初始化地图对象
	   	map=new T.Map("mapDiv");
	   	//设置显示地图的中心点和级别 
		map.centerAndZoom(new T.LngLat(116.40969,39.89945),zoom);
		 
		//创建对象 
		geocoder = new T.Geocoder();
		
	} 
	
	function searchResult(result)
	{
		if(result.getStatus() == 0){
			map.panTo(result.getLocationPoint(), 16);
			//创建标注对象
	        var marker = new T.Marker(result.getLocationPoint());
	        //向地图上添加标注
	        map.addOverLay(marker);
		}else{
			alert(result.getMsg());
		}
		
	}
	
	function search(){
		map.clearOverLays();
		geocoder.getPoint(document.getElementById("searchPoint").value, searchResult);
	}
	
</script>
</head> 
<body onLoad="onLoad()"> 
	<div id="mapDiv"></div>
	<p>本示例演示如何使用地理编码接口获得坐标信息。</p>
	<input type="text" id="searchPoint" value="北京市延庆区延庆镇莲花池村前街50夕阳红养老院" />
	<input type="button" value="搜索" onclick="search();" />
</body> 
</html>
轨迹：
单个标注点沿直线的轨迹运动：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－单个标注点沿直线的轨迹运动</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/jquery/jquery-1.7.2.min.js"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/d3/d3.min.js" charset="utf-8"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/D3SvgOverlay.js"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/CarTrack.js"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map, drivingRoute;
        var zoom = 13;
        var _CarTrack;
        var startIcon = "http://lbs.tianditu.gov.cn/images/bus/start.png";	//起点图标
        var endIcon = "http://lbs.tianditu.gov.cn/images/bus/end.png";		//终点图标
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40069, 39.89945), zoom);
            var config = {
                policy: 0,	//驾车策略
                onSearchComplete: searchResult	//检索完成后的回调函数
            };
            drivingRoute = new T.DrivingRoute(map, config);
            searchDrivingRoute()
        }

        function searchDrivingRoute() {
            map.clearOverLays();
            var startLngLat = new T.LngLat(116.354060,39.905650);
            var endLngLat = new T.LngLat(116.428130,39.903550);
            //驾车路线搜索
            drivingRoute.search(startLngLat, endLngLat);
        }

        function createRoute(lnglats, lineColor) {
            _CarTrack = new T.CarTrack(map, {
                interval: 20,
                speed: 10,
                dynamicLine: true,
                Datas: lnglats,
                polylinestyle: {color: "#2C64A7", width: 5, opacity: 0.9}
            })
        }

        //添加起始点
        function createStartMarker(result) {
            var startMarker = new T.Marker(result.getStart(), {
                icon: new T.Icon({
                    iconUrl: startIcon,
                    iconSize: new T.Point(44, 34),
                    iconAnchor: new T.Point(12, 31)
                })
            });
            map.addOverLay(startMarker);
            var endMarker = new T.Marker(result.getEnd(), {
                icon: new T.Icon({
                    iconUrl: endIcon,
                    iconSize: new T.Point(44, 34),
                    iconAnchor: new T.Point(12, 31)
                })
            });
            map.addOverLay(endMarker);
        }
        
        function searchResult(result) {
            //添加起始点
            createStartMarker(result);
            obj = result;
            //获取方案个数
            var routes = result.getNumPlans();
            for (var i = 0; i < routes; i++) {
                //获得单条驾车方案结果对象
                var plan = result.getPlan(i);
                createRoute(plan.getPath());

            }
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示单个标注点沿直线的轨迹运动</p>
<div >
    <input type="button" value="开始" onClick="_CarTrack.start();"/>
    <input type="button" value="暂停" onClick="_CarTrack.pause();"/>
    <input type="button" value="结束" onClick="_CarTrack.stop();"/>
</div>

</body>
</html>

多个标注点沿直线的轨迹运动：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－多个标注点沿直线的轨迹运动</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/jquery/jquery-1.7.2.min.js"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/d3/d3.min.js" charset="utf-8"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/D3SvgOverlay.js"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/CarTrack.js"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        input,p { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
    <script>
        var map, drivingRoute, drivingRoute1;
        var zoom = 12;
        var _CarTrack;
        var startIcon = "http://lbs.tianditu.gov.cn/images/bus/start.png";	//起点图标
        var endIcon = "http://lbs.tianditu.gov.cn/images/bus/end.png";		//终点图标
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40769, 39.91945), zoom);
            
            var config = {
                policy: 0,	//驾车策略
                onSearchComplete: searchResult	//检索完成后的回调函数
            };
            drivingRoute = new T.DrivingRoute(map, config);
            drivingRoute1 = new T.DrivingRoute(map, config);
            searchDrivingRoute()
        }

        function searchDrivingRoute() {
            map.clearOverLays();
            var startLngLat = new T.LngLat(116.354060, 39.905650);
            var endLngLat = new T.LngLat(116.428130, 39.903550);
            //驾车路线搜索
            drivingRoute.search(startLngLat, endLngLat);

            var startLngLat1 = new T.LngLat(116.380967, 39.953285);
            var endLngLat1 = new T.LngLat(116.424374, 39.914668);
            //驾车路线搜索
            drivingRoute1.search(startLngLat1, endLngLat1);
        }

        function createRoute(lnglats, lineColor) {
            var _CarTrack = new T.CarTrack(map, {
                interval: 20,
                speed: 10,
                dynamicLine: false,
                Datas: lnglats,
                polylinestyle: {color: "#2C64A7", width: 5, opacity: 0.9}
            })
            _CarTrack.start()
        }

        //添加起始点
        function createStartMarker(result) {
            var startMarker = new T.Marker(result.getStart(), {
                icon: new T.Icon({
                    iconUrl: startIcon,
                    iconSize: new T.Point(44, 34),
                    iconAnchor: new T.Point(12, 31)
                })
            });
            map.addOverLay(startMarker);
            var endMarker = new T.Marker(result.getEnd(), {
                icon: new T.Icon({
                    iconUrl: endIcon,
                    iconSize: new T.Point(44, 34),
                    iconAnchor: new T.Point(12, 31)
                })
            });
            map.addOverLay(endMarker);
        }
        
        function searchResult(result) {
            //添加起始点
            createStartMarker(result);
            obj = result;
            //获取方案个数
            var routes = result.getNumPlans();
            for (var i = 0; i < routes; i++) {
                //获得单条驾车方案结果对象
                var plan = result.getPlan(i);
                createRoute(plan.getPath());

            }
        }

    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本例演示多个标注点沿直线的轨迹运动</p>
</body>
</html>

车辆轨迹：
<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－车辆轨迹</title>
    <script src=" http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥" type="text/javascript"></script>
    <script src="http://lbs.tianditu.gov.cn/js/lib/d3/d3.min.js" charset="utf-8"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/D3SvgOverlay.js"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/openlibrary/CarTrack.js"></script>
    <script src="http://lbs.tianditu.gov.cn/api/js4.0/opensource/data/point.js"></script>
    <style type="text/css">
        body, html{width: 100%;height: 100%;margin:0;font-family:"微软雅黑";}
        #mapDiv{height:400px;width:100%;}
        p,input { margin-top: 10px; margin-left: 5px; font-size: 14px;  }
    </style>
</head>
<body>
<div id="mapDiv" ></div>
<p>本例演示车辆轨迹</p>
<div >
    <input type="button" value="开始" onClick="_CarTrack.start();"/>
    <input type="button" value="暂停" onClick="_CarTrack.pause();"/>
    <input type="button" value="结束" onClick="_CarTrack.stop();"/>
</div>
<script>
    var tile = new T.TileLayer("http://t4.tianditu.gov.cn/DataServer?T=vec_w&x={x}&y={y}&l={z}&tk=您的密钥");
    var map = new T.Map("mapDiv", {layers: [tile]});
    map.centerAndZoom(new T.LngLat(116.318090, 39.920270), 13);
    var _CarTrack = new T.CarTrack(map, {
        interval: 5,
        speed: 10,
        dynamicLine: true,
        polylinestyle: {color: "#2C64A7", weight: 5, opacity: 0.9},
        Datas: datas.features.map(function (obj, i) {
                    var coordinates = obj.geometry.coordinates;
                    var lnlat = new T.LngLat(coordinates[0], coordinates[1]);
                    return lnlat;
                }
        )
    })
</script>
</body>
</html>

定位：
用IP定位所在城市：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－自定义版权控件</title>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <script>
    	var map;
    	var zoom = 11;
        function onLoad() {
            map = new T.Map('mapDiv');
            map.centerAndZoom(new T.LngLat(116.40969, 39.89945), zoom);
            var lc = new T.LocalCity();
            lc.location(function (e) {
                alert(e.cityName);
                var marker = new T.Marker(e.lnglat);
                map.addOverLay(marker);
            });
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv" ></div>
<p>本示例演示如用IP定位所在城市</p>

</body>
</html>
用H5定位所在城市：
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="keywords" content="天地图"/>
    <title>天地图－地图API－范例－H5定位</title>
    <script type="text/javascript" src="http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥"></script>
    <style type="text/css">body,html{width:100%;height:100%;margin:0;font-family:"Microsoft YaHei"}#mapDiv{width:100%;height:400px}input,b,p{margin-left:5px;font-size:14px}</style>
    <script>
        var map;
        var zoom = 12;
        function onLoad() {
            //初始化地图对象
            map = new T.Map("mapDiv");
            //设置显示地图的中心点和级别
            map.centerAndZoom(new T.LngLat(116.40969, 38.89945), zoom);
            var lo = new T.Geolocation();
            fn = function (e) {
                if (this.getStatus() == 0){
                    map.centerAndZoom(e.lnglat, 15)
                    alert("获取定位坐标："+e.lnglat.lat + "," + e.lnglat.lng)
                    var marker = new T.Marker(e.lnglat);
                    map.addOverLay(marker);

                }
                if(this.getStatus() == 1){
                    map.centerAndZoom(e.lnglat, e.level)
                    alert("获取定位坐标："+e.lnglat.lat + "," + e.lnglat.lng)
                    var marker = new T.Marker(e.lnglat);
                    map.addOverLay(marker);
                }
            }
            lo.getCurrentPosition(fn);
        }
    </script>
</head>
<body onLoad="onLoad()">
<div id="mapDiv"></div>
<p>本示例演示如用H5定位所在城市</p>
</body>
</html>